<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>从零开始学Python(五)</title>
      <link href="/2024/04/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%BA%94)/"/>
      <url>/2024/04/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<h1>第五章 Python数据容器</h1><h2 id="5-1-Python数据容器入门">5.1 Python数据容器入门</h2><p>Python中的数据容器：<br>一种可以容纳多份数据的数据类型，容纳的每一份数据称之为一个元素，每一个元素可以使任意类型的数据，如字符串、数字、布尔等。<br>数据容器根据特点的不同，如：</p><ul><li>是否支持重复元素</li><li>是否可以修改</li><li>是否有序，等</li></ul><p>分为5类，分别是：<br>列表（list）、元组（tuple）、字符串（str）、集合（set）、字典（dict）</p><h2 id="5-2-数据容器：list（列表）">5.2 数据容器：list（列表）</h2><p>列表（list）类型是数据容器的一类，它可以一次性存储多个数据。</p><p>基本语法：</p><p># 字面量<br>[元素1, 元素2, 元素3, 元素4, …]</p><p># 定义变量<br>变量名称 = [元素1, 元素2, 元素3, 元素4, …]</p><p># 定义空列表<br>变量名称 = []<br>变量名称 = list()</p><p>列表内的每一个数据，称之为元素：</p><ul><li>以[]作为标识</li><li>列表内每一个元素之间用, 逗号隔开</li></ul><p>案例演示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表内的元素类型相同</span></span><br><span class="line">name_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;itcast&#x27;</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(name_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name_list))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表内的元素类型不同</span></span><br><span class="line">my_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="number">666</span>, <span class="literal">True</span>]</span><br><span class="line"><span class="built_in">print</span>(my_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(my_list))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表的嵌套</span></span><br><span class="line">nest_list = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="built_in">print</span>(nest_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(nest_list))</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;itheima&#x27;, &#x27;itcast&#x27;, &#x27;python&#x27;]</span><br><span class="line">&lt;class &#x27;list&#x27;&gt;</span><br><span class="line">[&#x27;itheima&#x27;, 666, True]</span><br><span class="line">&lt;class &#x27;list&#x27;&gt;</span><br><span class="line">[[1, 2, 3], [4, 5, 6]]</span><br><span class="line">&lt;class &#x27;list&#x27;&gt;</span><br></pre></td></tr></table></figure><h2 id="5-3-列表的遍历">5.3 列表的遍历</h2><p>列表的遍历可以使用下标索引<br><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%BA%94%EF%BC%89/list1.png" alt=""></p><p>如图，列表中的每一个元素都有其位置下标索引，从前往后的方向，从0开始依次递增</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法： 列表[下标索引]</span></span><br><span class="line">name_list = [<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Lily&#x27;</span>, <span class="string">&#x27;Rose&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(name_list[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(name_list[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(name_list[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Tom</span><br><span class="line">Lily</span><br><span class="line">Rose</span><br></pre></td></tr></table></figure><p>或者，列表也可以进行反向索引，也就是从后往前：从-1开始，依次递减（-1, -2, -3, …）<br><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%BA%94%EF%BC%89/list2.png" alt=""></p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法： 列表[下标索引]</span></span><br><span class="line">name_list = [<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Lily&#x27;</span>, <span class="string">&#x27;Rose&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(name_list[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(name_list[-<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(name_list[-<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Rose</span><br><span class="line">Lily</span><br><span class="line">Tom</span><br></pre></td></tr></table></figure><p>嵌套列表的下标（索引）<br>如果列表是嵌套的列表，同样支持下标索引,类似C语言中的二维数组<br><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%BA%94%EF%BC%89/list3.png" alt=""></p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法： 列表[下标索引]</span></span><br><span class="line">my_list = [[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">9</span>, <span class="number">8</span>]]</span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">0</span>][<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">1</span>][<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">1</span>][<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">9</span><br><span class="line">8</span><br></pre></td></tr></table></figure><h2 id="5-4-列表的常用操作">5.4 列表的常用操作</h2><p>列表除了可以：</p><ul><li>定义</li><li>使用下标索引获取值</li></ul><p>此外，列表也提供了一系列功能：</p><ul><li>插入元素</li><li>删除元素</li><li>清空列表</li><li>修改元素</li><li>统计元素个数</li></ul><p>等等功能，这些功能我们都称之为：列表的方法</p><p>在Python中，如果将函数定义为class（类）的成员，那么函数会称之为：方法，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br></pre></td></tr></table></figure><p>方法和函数功能一样，有传入参数，有返回值，只是方法的使用格式不同：</p><ul><li>函数的使用：num = add(1, 2)</li><li>方法的使用：student = Student()<br>                      num = student.add(1, 2)</li></ul><p><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%BA%94%EF%BC%89/%E5%88%97%E8%A1%A8%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.png" alt="列表常用方法"></p><h3 id="5-4-1-index查询方法">5.4.1 index查询方法</h3><ul><li>查询某元素的下标<br>功能：查找指定元素在列表中的下标，如果找不到，报错ValueError<br>语法：列表.index(元素)<br>index就是列表对象（变量）内置的方法（函数）</li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表的查询功能</span></span><br><span class="line">my_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;itcast&#x27;</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">index = my_list.index(<span class="string">&#x27;itcast&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;&#x27;itcast&#x27;在列表中的下标索引值是：<span class="subst">&#123;index&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;itcast&#x27;在列表中的下标索引值是：1</span><br></pre></td></tr></table></figure><h3 id="5-4-2-列表的修改功能（方法）">5.4.2 列表的修改功能（方法）</h3><h4 id="5-4-2-1-修改特定位置（索引）的元素值：">5.4.2.1 修改特定位置（索引）的元素值：</h4><p>语法：列表[下标] = 值<br>可以使用如上语法，直接对指定下标（正向、反向下标均可）的值进行重新赋值（修改）</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表的修改功能</span></span><br><span class="line">my_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;itcast&#x27;</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">my_list[<span class="number">2</span>] = <span class="string">&#x27;java&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表修改元素后为：<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表修改元素后为：[&#x27;itheima&#x27;, &#x27;itcast&#x27;, &#x27;java&#x27;]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-2-insert插入方法：">5.4.2.2 insert插入方法：</h4><p>语法：列表.insert(下标, 元素)，在指定的下标位置插入指定的元素</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表的插入功能</span></span><br><span class="line">my_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;itcast&#x27;</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">my_list.insert(<span class="number">1</span>, <span class="string">&#x27;java&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表插入元素后为：<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表插入元素后为：[&#x27;itheima&#x27;, &#x27;java&#x27;, &#x27;itcast&#x27;, &#x27;python&#x27;]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-3-append追加元素方式1：">5.4.2.3 append追加元素方式1：</h4><p>语法：列表.append(元素)，将指定元素追加到列表的尾部</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表的追加功能1</span></span><br><span class="line">my_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;itcast&#x27;</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">my_list.append(<span class="string">&#x27;java&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表追加元素后为：<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表追加元素后为：[&#x27;itheima&#x27;, &#x27;itcast&#x27;, &#x27;python&#x27;, &#x27;java&#x27;]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-4-extend追加元素方式2：">5.4.2.4 extend追加元素方式2：</h4><p>语法：列表.extend(其他数据容器)，将其他数据容器的内容取出，依次追加到列表的尾部</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表的追加功能2</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.extend([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表在追加了一个新的列表后为：<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表在追加了一个新的列表后为：[1, 2, 3, 4, 5, 6]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-5-del删除方法">5.4.2.5 del删除方法</h4><p>语法1：del 列表[下标]<br>语法2：列表.pop(下标)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式1</span></span><br><span class="line"><span class="keyword">del</span> my_list[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表删除元素后为:<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式2</span></span><br><span class="line">my_list.pop(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表删除元素后为:<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">列表删除元素后为:[2, 3]</span><br><span class="line">列表删除元素后为:[3]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-6-remove删除某元素在列表中的第一个匹配项">5.4.2.6 remove删除某元素在列表中的第一个匹配项</h4><p>语法：列表.remove(元素)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表删除第一个匹配项</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.remove(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表删除第一个匹配项后为：<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表删除第一个匹配项后为：[1, 3, 2, 3]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-7-clear清空列表">5.4.2.7 clear清空列表</h4><p>语法：列表.clear()</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清空列表</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,]</span><br><span class="line">my_list.clear()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;清空列表后为：<span class="subst">&#123;my_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">清空列表后为：[]</span><br></pre></td></tr></table></figure><h4 id="5-4-2-8-count统计数量方法">5.4.2.8 count统计数量方法</h4><p>语法：列表.count(元素)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计某个元素数量</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br><span class="line">num = my_list.count(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表中&#x27;2&#x27;的数量为：<span class="subst">&#123;num&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表中&#x27;2&#x27;的数量为：3</span><br></pre></td></tr></table></figure><h4 id="5-4-2-9-len统计长度方法">5.4.2.9 len统计长度方法</h4><p>语法：len(列表)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计列表所有元素数量</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br><span class="line">num = <span class="built_in">len</span>(my_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表中所有元素的数量为：<span class="subst">&#123;num&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表中所有元素的数量为：6</span><br></pre></td></tr></table></figure><h2 id="5-5-列表的常用操作练习">5.5 列表的常用操作练习</h2><p>有一个列表，内容是：[21, 25, 21, 23, 22, 20]，记录的是一批学生的年龄</p><p>请通过列表的功能（方法），对其进行：</p><ol><li>定义这个列表，并用变量接收它</li><li>追加一个数字31，到列表的尾部</li><li>追加一个新列表[29, 33, 30]，到列表的尾部</li><li>取出第一个元素（应是：21）</li><li>取出最后一个元素（应是：30）</li><li>查找元素31，在列表中的下标位置</li></ol><p>具体代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义列表</span></span><br><span class="line">age_list = [<span class="number">21</span>, <span class="number">25</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">22</span>, <span class="number">20</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 追加31</span></span><br><span class="line">age_list.append(<span class="number">31</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 追加新列表[29, 33, 30]</span></span><br><span class="line">age_list.extend([<span class="number">29</span>, <span class="number">33</span>, <span class="number">30</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出第一个元素</span></span><br><span class="line">num1 = age_list[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表中的第一个元素是：<span class="subst">&#123;num1&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出最后一个元素</span></span><br><span class="line">num2 = age_list[-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表中最后一个元素是：<span class="subst">&#123;num2&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找31在列表中的下标</span></span><br><span class="line">index = age_list.index(<span class="number">31</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;元素31在列表中的下标是：<span class="subst">&#123;index&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">列表中的第一个元素是：21</span><br><span class="line">列表中最后一个元素是：30</span><br><span class="line">元素31在列表中的下标是：6</span><br></pre></td></tr></table></figure><h2 id="5-6-列表的遍历">5.6 列表的遍历</h2><h3 id="5-6-1-while循环遍历列表">5.6.1 while循环遍历列表</h3><p>语法：<br>index = 0<br>while index &lt; len(列表):</p><p>         元素 = 列表[index]<br>         对元素进行处理<br>         index += 1</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># while循环遍历列表</span></span><br><span class="line">my_list = [<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;itcast&#x27;</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(my_list):</span><br><span class="line">    s = my_list[index]</span><br><span class="line">    <span class="built_in">print</span>(s)</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">itheima</span><br><span class="line">itcast</span><br><span class="line">python</span><br></pre></td></tr></table></figure><h3 id="5-6-2-for循环遍历列表">5.6.2 for循环遍历列表</h3><p>语法：<br>for 临时变量 in 变量容器：<br>     对临时变量进行处理</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for循环遍历列表</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> my_list:</span><br><span class="line">    <span class="built_in">print</span>(element)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="5-6-3-while循环与for循环的区别">5.6.3 while循环与for循环的区别</h2><ul><li>在循环控制上：<ul><li>while循环可以自定循环条件，并自行控制</li><li>for循环不可以自定循环条件，只可以一个个从容器内取出数据</li></ul></li><li>在无限循环上：<ul><li>while循环可以通过条件控制做到无限循环</li><li>for循环理论上不可以，因为被遍历的容器容量不是无限的</li></ul></li><li>在使用场景上：<ul><li>while循环适用于任何可以想要循环的场景</li><li>for循环适用于遍历数据容器的场景或简单的固定次数循环场景</li></ul></li></ul><h2 id="5-7-数据容器：tuple（元组）">5.7 数据容器：tuple（元组）</h2><p>元组同列表一样，都是可以封装多个、不同类型的元素在内。<br>但最大的不同点在于：<strong>元组一旦定义完成就不可以修改，相当于一个只读的列表</strong></p><p>基本语法：<br>元组定义：定义元组使用小括号，且使用逗号隔开各个数据，数据可以是不同的数据类型</p><p># 定义元组字面量<br>(元素, 元素, …, 元素)</p><p># 定义元组变量<br>变量名称 = (元素, 元素, …, 元素)</p><p># 定义空元组<br>变量名称 = ()<br>变量名称 = tuple()</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义元组</span></span><br><span class="line">t1 = (<span class="number">1</span>, <span class="string">&quot;python&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义空元组</span></span><br><span class="line">t2 = ()</span><br><span class="line">t3 = <span class="built_in">tuple</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义单个元素的元组</span></span><br><span class="line">t4 = (<span class="string">&#x27;python&#x27;</span>,)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t1的类型是<span class="subst">&#123;<span class="built_in">type</span>(t1)&#125;</span>，内容是<span class="subst">&#123;t1&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t2的类型是<span class="subst">&#123;<span class="built_in">type</span>(t2)&#125;</span>，内容是<span class="subst">&#123;t2&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t3的类型是<span class="subst">&#123;<span class="built_in">type</span>(t3)&#125;</span>，内容是<span class="subst">&#123;t3&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1的类型是&lt;class &#x27;tuple&#x27;&gt;，内容是(1, &#x27;python&#x27;, True)</span><br><span class="line">t2的类型是&lt;class &#x27;tuple&#x27;&gt;，内容是()</span><br><span class="line">t3的类型是&lt;class &#x27;tuple&#x27;&gt;，内容是()</span><br></pre></td></tr></table></figure><p>注意：元组只有一个数据时，这个数据后面要添加逗号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义1个元素的元组</span></span><br><span class="line">t4 = (<span class="string">&#x27;python&#x27;</span>,)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t1的类型是<span class="subst">&#123;<span class="built_in">type</span>(t4)&#125;</span>，内容是<span class="subst">&#123;t4&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t4的类型是&lt;class &#x27;tuple&#x27;&gt;，内容是(&#x27;python&#x27;,)</span><br></pre></td></tr></table></figure><p>元组也支持嵌套：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 元组的嵌套</span></span><br><span class="line">t5 = ((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;t5的类型是<span class="subst">&#123;<span class="built_in">type</span>(t5)&#125;</span>，内容是<span class="subst">&#123;t5&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(t5[<span class="number">0</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t5的类型是&lt;class &#x27;tuple&#x27;&gt;，内容是((1, 2, 3), (4, 5, 6))</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="5-8-元组的常用操作">5.8 元组的常用操作</h2><p>元组常用方法：<br><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%BA%94%EF%BC%89/%E5%85%83%E7%BB%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.png" alt="元组常用方法"></p><h3 id="5-8-1-index查询方法">5.8.1 index查询方法</h3><p>语法：<br>变量 = 元组.index(元素)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index查找方法</span></span><br><span class="line">t1 = (<span class="number">1</span>, <span class="string">&quot;python&quot;</span>, <span class="literal">True</span>)</span><br><span class="line">index = t1.index(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;在元组t1中查找1的下标是：<span class="subst">&#123;index&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在元组t1中查找1的下标是：0</span><br></pre></td></tr></table></figure><h3 id="5-8-2-count统计数量方法">5.8.2 count统计数量方法</h3><p>语法：<br>变量 = 元组.count(元素)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># count统计方法</span></span><br><span class="line">t1 = (<span class="number">1</span>, <span class="string">&quot;python&quot;</span>, <span class="string">&quot;python&quot;</span>, <span class="string">&quot;python&quot;</span>, <span class="literal">True</span>)</span><br><span class="line">num = t1.count(<span class="string">&quot;python&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;元组t1中共有元素&#x27;python&#x27;<span class="subst">&#123;num&#125;</span>个&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元组t1中共有元素&#x27;python&#x27;3个</span><br></pre></td></tr></table></figure><h3 id="5-8-3-len统计长度方法">5.8.3 len统计长度方法</h3><p>语法：<br>变量 = len(元组)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># len统计元组元素数量方法</span></span><br><span class="line">t1 = (<span class="number">1</span>, <span class="string">&quot;python&quot;</span>, <span class="string">&quot;python&quot;</span>, <span class="string">&quot;python&quot;</span>, <span class="literal">True</span>)</span><br><span class="line">num = <span class="built_in">len</span>(t1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;元组t1中共有元素<span class="subst">&#123;num&#125;</span>个&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元组t1中共有元素5个</span><br></pre></td></tr></table></figure><h2 id="5-9-元组的遍历">5.9 元组的遍历</h2><h3 id="5-9-1-while循环遍历元组">5.9.1 while循环遍历元组</h3><p>语法：<br>index = 0<br>while index &lt; len(元组):</p><p>         元素 = 元组[index]<br>         对元素进行处理<br>         index += 1</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># while循环遍历列元组</span></span><br><span class="line">t1 = (<span class="number">1</span>, <span class="string">&quot;python&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(t1):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;元组t1中有元素：<span class="subst">&#123;t1[index]&#125;</span>&quot;</span>)</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元组t1中有元素：1</span><br><span class="line">元组t1中有元素：python</span><br><span class="line">元组t1中有元素：True</span><br></pre></td></tr></table></figure><h3 id="5-9-2-for循环遍历元组">5.9.2 for循环遍历元组</h3><p>语法：<br>for 临时变量 in 变量容器：<br>     对临时变量进行处理</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for循环遍历元组</span></span><br><span class="line">t1 = (<span class="number">1</span>, <span class="string">&quot;python&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> t1:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;元组t1中有元素：<span class="subst">&#123;element&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元组t1中有元素：1</span><br><span class="line">元组t1中有元素：python</span><br><span class="line">元组t1中有元素：True</span><br></pre></td></tr></table></figure><p><strong>注：不可修改元组的内容，但可以修改元组内的list的内容（增删改查等），如t1 = (1, 2, [‘itheima’, ‘itcast’])</strong></p><h2 id="5-10-数据容器：字符串（string）">5.10 数据容器：字符串（string）</h2><p>字符串是字符的容器，和其他容器一样，字符串也可以通过下标进行访问：</p><ul><li>从前往后，下标从0开始</li><li>从后往前，下标从-1开始</li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过下标索引取值</span></span><br><span class="line">my_str = <span class="string">&quot;itheima and itcast&quot;</span></span><br><span class="line"></span><br><span class="line">value1 = my_str[<span class="number">2</span>]</span><br><span class="line">value2 = my_str[-<span class="number">16</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;从字符串<span class="subst">&#123;my_str&#125;</span>取下标为2的元素是：<span class="subst">&#123;value1&#125;</span>，从字符串<span class="subst">&#123;my_str&#125;</span>取下标为-16的元素是：<span class="subst">&#123;value2&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从字符串itheima and itcast取下标为2的元素是：h，从字符串itheima and itcast取下标为-16的元素是：h</span><br></pre></td></tr></table></figure><p><strong>注：同元组一样，字符串是一个不可修改的数据容器</strong></p><h2 id="5-11-字符串的常用操作">5.11 字符串的常用操作</h2><p>字符串常用方法：<br><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%BA%94%EF%BC%89/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.png" alt="字符串常用方法"></p><h3 id="5-11-1-index查询方法">5.11.1 index查询方法</h3><p>语法：<br>变量 = 字符串.index(元素)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index查询方法</span></span><br><span class="line">my_str = <span class="string">&quot;itheima and itcast&quot;</span></span><br><span class="line"></span><br><span class="line">index = my_str.index(<span class="string">&quot;and&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;在字符串<span class="subst">&#123;my_str&#125;</span>中查找&#x27;and&#x27;，其下标为：<span class="subst">&#123;index&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在字符串itheima and itcast中查找&#x27;and&#x27;，其下标为：8</span><br></pre></td></tr></table></figure><h3 id="5-11-2-replace替换方法">5.11.2 replace替换方法</h3><p>语法：<br>新字符串 = 字符串.replace(字符串1, 字符串2)<br>功能：将字符串内的全部字符串1，替换为字符串2<br>注意：不是修改字符串本身，而是得到了一个新的字符串</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># replace替换方法</span></span><br><span class="line">my_str = <span class="string">&quot;itheima and itcast&quot;</span></span><br><span class="line">my_new_str = my_str.replace(<span class="string">&quot;it&quot;</span>, <span class="string">&quot;程序&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;替换后的新字符串为：<span class="subst">&#123;my_new_str&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">替换后的新字符串为：程序heima and 程序cast</span><br></pre></td></tr></table></figure><h3 id="5-11-3-split分割方法">5.11.3 split分割方法</h3><p>语法：<br>字符串.split(分隔符字符串)<br>功能：按照指定的分隔符字符串，将字符串划分为多个字符串，并存入列表对象中<br>注意：字符串本身不变，而是得到了一个列表对象</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># split分割方法</span></span><br><span class="line">my_str = <span class="string">&quot;hello itheima and itcast&quot;</span></span><br><span class="line">my_str_list = my_str.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;将字符串<span class="subst">&#123;my_str&#125;</span>进行split分割后得到：<span class="subst">&#123;my_str_list&#125;</span>，其类型为：<span class="subst">&#123;<span class="built_in">type</span>(my_str_list)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将字符串hello itheima and itcast进行split分割后得到：[&#x27;hello&#x27;, &#x27;itheima&#x27;, &#x27;and&#x27;, &#x27;itcast&#x27;]，其类型为：&lt;class &#x27;list&#x27;&gt;</span><br></pre></td></tr></table></figure><h3 id="5-11-4-strip规整方法">5.11.4 strip规整方法</h3><h4 id="5-11-4-1-字符串的规整操作（去前后空格）">5.11.4.1 字符串的规整操作（去前后空格）</h4><p>语法：<br>字符串.strip()</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># strip规整操作 （去前后空格）</span></span><br><span class="line">my_str = <span class="string">&quot;   itheima and itcast   &quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;字符串<span class="subst">&#123;my_str&#125;</span>规整后为：<span class="subst">&#123;my_str.strip()&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串   itheima and itcast   规整后为：itheima and itcast</span><br></pre></td></tr></table></figure><h4 id="5-11-4-2-字符串的规整操作（去前后指定字符串）">5.11.4.2 字符串的规整操作（去前后指定字符串）</h4><p>语法：<br>字符串.strip(字符串)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># strip规整操作2（去前后指定字符串）</span></span><br><span class="line">my_str = <span class="string">&quot;12itheima and itcast21&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;字符串<span class="subst">&#123;my_str&#125;</span>规整后为：<span class="subst">&#123;my_str.strip(<span class="string">&quot;12&quot;</span>)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串12itheima and itcast21规整后为：itheima and itcast</span><br></pre></td></tr></table></figure><p><strong>注：传入的是&quot;12&quot;其实就是：&quot;1&quot;和&quot;2&quot;都会移除，是按照单个字符</strong></p><h3 id="5-11-5-count统计数量方法">5.11.5 count统计数量方法</h3><p>语法：<br>变量 = 字符串.count(元素)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># count统计数量方法</span></span><br><span class="line">my_str = <span class="string">&quot;itheima and itcast&quot;</span></span><br><span class="line">num = my_str.count(<span class="string">&quot;i&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;字符串<span class="subst">&#123;my_str&#125;</span>中共有元素&#x27;i&#x27;<span class="subst">&#123;num&#125;</span>个&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串itheima and itcast中共有元素&#x27;i&#x27;3个</span><br></pre></td></tr></table></figure><h3 id="5-11-6-len统计长度方法">5.11.6 len统计长度方法</h3><p>语法：<br>变量 = len(字符串)</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># len统计元组元素数量方法</span></span><br><span class="line">my_str = <span class="string">&quot;itheima and itcast&quot;</span></span><br><span class="line">num = <span class="built_in">len</span>(my_str)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;字符串<span class="subst">&#123;my_str&#125;</span>中共有元素<span class="subst">&#123;num&#125;</span>个&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串itheima and itcast中共有元素18个</span><br></pre></td></tr></table></figure><h2 id="5-12-字符串的遍历">5.12 字符串的遍历</h2><h3 id="5-12-1-while循环遍历字符串">5.12.1 while循环遍历字符串</h3><p>语法：<br>index = 0<br>while index &lt; len(字符串):</p><p>         元素 = 字符串[index]<br>         对元素进行处理<br>         index += 1</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># while循环遍历列字符串</span></span><br><span class="line">my_str = <span class="string">&quot;itheima&quot;</span></span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(my_str):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;元组t1中有元素：<span class="subst">&#123;my_str[index]&#125;</span>&quot;</span>)</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">元组t1中有元素：i</span><br><span class="line">元组t1中有元素：t</span><br><span class="line">元组t1中有元素：h</span><br><span class="line">元组t1中有元素：e</span><br><span class="line">元组t1中有元素：i</span><br><span class="line">元组t1中有元素：m</span><br><span class="line">元组t1中有元素：a</span><br></pre></td></tr></table></figure><h3 id="5-12-2-for循环遍历元组">5.12.2 for循环遍历元组</h3><p>语法：<br>for 临时变量 in 变量容器：<br>     对临时变量进行处理</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for循环遍历字符串</span></span><br><span class="line">my_str = <span class="string">&quot;itheima&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> my_str:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;字符串<span class="subst">&#123;my_str&#125;</span>中有元素：<span class="subst">&#123;element&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符串itheima中有元素：i</span><br><span class="line">字符串itheima中有元素：t</span><br><span class="line">字符串itheima中有元素：h</span><br><span class="line">字符串itheima中有元素：e</span><br><span class="line">字符串itheima中有元素：i</span><br><span class="line">字符串itheima中有元素：m</span><br><span class="line">字符串itheima中有元素：a</span><br></pre></td></tr></table></figure><h2 id="5-13-字符串基本操作练习案例">5.13 字符串基本操作练习案例</h2><p>给定一个字符串：“itheima itcast boxuegu”</p><ul><li>统计字符串中有多少个&quot;it&quot;字符</li><li>将字符串内的空格全部替换为字符&quot;|&quot;</li><li>并按照&quot;|&quot;进行字符串分割，得到列表</li></ul><p>具体实现代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">my_str = <span class="string">&quot;itheima itcast boxuegu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># count方法</span></span><br><span class="line">num = my_str.count(<span class="string">&quot;it&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;该字符串中有<span class="subst">&#123;num&#125;</span>个&#x27;it&#x27;字符&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># replace方法</span></span><br><span class="line">my_new_str = my_str.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;|&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;替换后的字符串为：<span class="subst">&#123;my_new_str&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># split方法</span></span><br><span class="line">my_str_list = my_new_str.split(<span class="string">&quot;|&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;分割后的字符串列表为：<span class="subst">&#123;my_str_list&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">该字符串中有2个&#x27;it&#x27;字符</span><br><span class="line">替换后的字符串为：itheima|itcast|boxuegu</span><br><span class="line">分割后的字符串列表为：[&#x27;itheima&#x27;, &#x27;itcast&#x27;, &#x27;boxuegu&#x27;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始学Python(四)</title>
      <link href="/2024/04/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E5%9B%9B)/"/>
      <url>/2024/04/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1>第四章 Python函数</h1><h2 id="4-1-函数初体验">4.1 函数初体验</h2><p>函数：是指组织好的，可重复使用的，用来实现特定功能的代码段。<br>函数的好处：</p><ul><li>将功能封装在函数内部，可供随时随地重复利用</li><li>提高代码的复用性，减少重复代码，提高开发效率</li></ul><p>示例：定义一个可以计算字符串长度的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_len</span>(<span class="params">data</span>):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;字符串<span class="subst">&#123;data&#125;</span>的长度为<span class="subst">&#123;count&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;whut&quot;</span></span><br><span class="line">my_len(str1)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串whut的长度为4</span><br></pre></td></tr></table></figure><h2 id="4-2-函数的定义">4.2 函数的定义</h2><h3 id="4-2-1-函数的定义：">4.2.1 函数的定义：</h3><p>def   函数名(传入参数):</p><p>        函数体<br>        return   返回值</p><h3 id="4-2-2-函数的调用">4.2.2 函数的调用</h3><p>函数名(参数)</p><p>案例：定义一个函数，函数名任意，要求调用后输出以下语句：<br>欢迎来到黑马程序员！<br>请出示您的健康码以及72小时核酸证明！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">welcome</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎来到黑马程序员！&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请出示您的健康码以及72小时核酸证明！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">welcome()</span><br></pre></td></tr></table></figure><h2 id="4-3-函数的参数">4.3 函数的参数</h2><p>函数传入参数的功能：在函数进行计算时，接受外部（调用时）提供的数据</p><p>示例：定义一个函数用于计算两个数相加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    result = x + y</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;x&#125;</span> + <span class="subst">&#123;y&#125;</span>的结果是：<span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">add(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>函数定义中，提供的x和y称之为：形式参数（形参），表示函数声明将要使用2个参数<ul><li>参数之间使用逗号进行分隔</li></ul></li><li>函数调用中，传入的1和2称之为：实际参数（实参），表示函数执行时真正使用的参数值<ul><li>传入的时候，按照顺序传入数据，使用逗号分隔</li></ul></li><li>传入参数的数量是不受限制的<ul><li>可以不使用参数</li><li>也可以仅使用任意n个参数</li></ul></li></ul><p>案例：升级版自动查核酸<br>定义一个函数，名称任意，并接受一个参数传入（数字类型，表示体温）<br>在函数内进行提问判断（正常范围：小于等于37.5度），并输出如下内容：</p><p>欢迎来到黑马程序员！请出示您的健康码以及72小时核酸证明，并配合测量体温！<br>体温测量中，您的体温是：37.3度，体温正常请进！</p><p>欢迎来到黑马程序员！请出示您的健康码以及72小时核酸证明，并配合测量体温！<br>体温测量中，您的体温是：39.3度，需要隔离！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">tem</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎来到黑马程序员！请出示您的健康码以及72小时核酸证明，并配合测量体温！&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> tem &lt;= <span class="number">37.5</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;体温测量中，您的体温是：<span class="subst">&#123;tem&#125;</span>度，体温正常请进！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;体温测量中，您的体温是：<span class="subst">&#123;tem&#125;</span>度，需要隔离！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数，传入参数</span></span><br><span class="line">tem = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您的体温：&quot;</span>))</span><br><span class="line">check(tem)</span><br></pre></td></tr></table></figure><h2 id="4-4-函数的返回值">4.4 函数的返回值</h2><h3 id="4-4-1-函数返回值的定义语法">4.4.1 函数返回值的定义语法</h3><p>返回值语法：</p><p>def   函数名(传入参数):</p><p>        函数体<br>        return   返回值</p><p>变量 = 函数(参数)</p><p>示例：<br>定义一个函数，完成两数相加的功能，并返回结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    result = x + y</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">r = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(r)</span><br></pre></td></tr></table></figure><p><strong>注：函数体在遇到return后就结束了，所以写在return后的代码不会执行</strong></p><h3 id="4-4-2-None类型">4.4.2 None类型</h3><p>Python中有一个特殊的字面量：None，其类型是&lt;class ‘NoneType’&gt;<br>无返回值的函数，实际就是返回了None这个字面量</p><p>None作为一个特殊的字面量，用于表示：空、无意义，其有非常多的应用场景。</p><ul><li>用在函数无返回值上</li><li>用在if判断上<ul><li>在if判断中，None等同于False</li><li>一般用于在函数中主动返回None，配合if判断做相关处理</li></ul></li><li>用于声明无内容的变量上<ul><li>定义变量，但暂时不需要变量有具体的值，可以用None代替</li><li>name = None</li></ul></li></ul><h2 id="4-5-函数的说明文档">4.5 函数的说明文档</h2><p>函数是纯代码语言，我们可以给函数添加说明文档，辅助理解函数的作用。<br>语法如下：</p><p>def   func(x, y):</p><p>        “”&quot;<br>        函数说明<br>        :param x: 形参x的说明<br>        :param y: 形参y的说明<br>        :return: 返回值的说明<br>        “”&quot;</p><p>        函数体<br>        return   返回值</p><ul><li>通过多行注释的形式对函数进行说明解释</li><li>内容应写在函数体之前</li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    add函数可以接收两个参数，进行两数相加的功能</span></span><br><span class="line"><span class="string">    :param x: 相加的第一个数 </span></span><br><span class="line"><span class="string">    :param y: 相加的第二个数</span></span><br><span class="line"><span class="string">    :return: 相加的结果</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    result = x + y</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">r = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(r)</span><br></pre></td></tr></table></figure><p>效果如下：<img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E5%9B%9B%EF%BC%89/%E5%87%BD%E6%95%B0%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3.png" alt="函数说明文档"></p><h2 id="4-6-函数的嵌套调用">4.6 函数的嵌套调用</h2><ul><li>嵌套调用是指：一个函数里又调用了另一个函数</li><li>调用流程：函数A执行到调用函数B的语句，会将函数B全部执行完成后，继续执行函数A的剩余部分</li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数func_b</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_b</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---2---&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数func_a</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_a</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---1---&quot;</span>)</span><br><span class="line">    <span class="comment"># 调用函数func_b</span></span><br><span class="line">    func_b()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---3---&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用函数func_a</span></span><br><span class="line">func_a()</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---1---</span><br><span class="line">---2---</span><br><span class="line">---3---</span><br></pre></td></tr></table></figure><h2 id="4-7-变量的作用域">4.7 变量的作用域</h2><p>变量的作用域指的是变量的作用范围（变量在哪里可用，在哪里不可用）<br>主要分为两类：</p><ul><li>局部变量：定义在函数体内部的变量，即只在函数体内部生效</li><li>全局变量：在函数体内、外都能生效的变量</li></ul><p>global关键字：在函数内部声明变量为全局变量</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># global关键字的使用</span></span><br><span class="line">num = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testA</span>():</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testB</span>():</span><br><span class="line">    <span class="comment"># global关键字声明a是全局变量</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    num = <span class="number">200</span></span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">testA()                        <span class="comment"># 结果：100</span></span><br><span class="line">testB()                        <span class="comment"># 结果：200</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;全局变量num = <span class="subst">&#123;num&#125;</span>&quot;</span>)   <span class="comment"># 结果：全局变量num = 200</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">100</span><br><span class="line">200</span><br><span class="line">全局变量num = 200</span><br></pre></td></tr></table></figure><h2 id="4-8-综合案例：黑马ATM">4.8 综合案例：黑马ATM</h2><ul><li>主菜单效果</li><li><pre><code>--------------------主菜单-------------------周杰伦，您好，欢迎来到黑马银行ATM，请选择操作：查询余额   [输入1]存款       [输入2]取款       [输入3]退出       [输入4]请输入您的选择：</code></pre></li><li>查询余额效果：</li><li><pre><code>--------------------查询余额--------------------周杰伦，您好，您的余额剩余：5000000元</code></pre></li><li>存、取款效果：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--------------------存款--------------------</span><br><span class="line">周杰伦，您好，您存款50000元成功</span><br><span class="line">周杰伦，您好，您的余额剩余：5050000元</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--------------------取款--------------------</span><br><span class="line">周杰伦，您好，您取款50000元成功</span><br><span class="line">周杰伦，您好，您的余额剩余：4950000元</span><br></pre></td></tr></table></figure></li></ul><p>要求：</p><ul><li>定义一个全局变量：money，用来记录银行卡余额（默认5000000）</li><li>定义一个全局变量：name，用来记录客户姓名（启动程序时输入）</li><li>定义如下的函数：<ul><li>查询余额函数</li><li>存款函数</li><li>取款函数</li><li>主菜单函数</li></ul></li><li>要求：</li><li>程序启动后要求输入客户姓名</li><li>查询余额，存款后都会返回主菜单</li><li>存款、取款后，都应显示一下当前余额</li><li>客户选择退出或输入错误，程序会退出，否则一直运行</li></ul><p>具体实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 黑马ATM</span></span><br><span class="line">money = <span class="number">5000000</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入您的姓名：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#主菜单</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">menu</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------------------主菜单-------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>，您好，欢迎来到黑马银行ATM，请选择操作：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;查询余额\t[输入1]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;存款\t\t[输入2]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;取款\t\t[输入3]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;退出\t\t[输入4]&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">input</span>(<span class="string">&quot;请输入您的选择：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询余额函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">balance</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------------------查询余额--------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>，您好，您的余额剩余：<span class="subst">&#123;money&#125;</span>元&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存款函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_money</span>(<span class="params">save</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------------------存款--------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>，您好，您存款<span class="subst">&#123;save&#125;</span>元成功&quot;</span>)</span><br><span class="line">    <span class="keyword">global</span> money  <span class="comment"># money在函数内定义为全局变量</span></span><br><span class="line">    money += save</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>，您好，您的余额剩余：<span class="subst">&#123;money&#125;</span>元&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取款函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">withdraw_money</span>(<span class="params">withdraw</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------------------取款--------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>，您好，您取款<span class="subst">&#123;withdraw&#125;</span>元成功&quot;</span>)</span><br><span class="line">    <span class="keyword">global</span> money  <span class="comment"># money在函数内定义为全局变量</span></span><br><span class="line">    money -= withdraw</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>，您好，您的余额剩余：<span class="subst">&#123;money&#125;</span>元&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    num = menu()</span><br><span class="line">    <span class="keyword">if</span> num == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        balance()</span><br><span class="line">        <span class="keyword">continue</span>  <span class="comment"># 通过continue继续下一次循环，直接回到主菜单</span></span><br><span class="line">    <span class="keyword">elif</span> num == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        save_money(<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您要存的金额：&quot;</span>)))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> num == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        withdraw_money(<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您要取的金额：&quot;</span>)))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> num == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;退出成功，感谢您的使用&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入错误&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始学Python(三)</title>
      <link href="/2024/04/10/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%B8%89)/"/>
      <url>/2024/04/10/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h1>第三章 Python循环语句</h1><h2 id="3-1-while循环的基础语法">3.1 while循环的基础语法</h2><h3 id="3-1-1-while循环语句">3.1.1 while循环语句</h3><p>while循环格式：</p><p>while   条件:</p><p>     满足条件时要做的事情1<br>     满足条件时要做的事情2<br>     满足条件时要做的事情3<br>     …（省略）…</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;黑马程序员&quot;</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">黑马程序员</span><br><span class="line">黑马程序员</span><br><span class="line">黑马程序员</span><br><span class="line">黑马程序员</span><br><span class="line">黑马程序员</span><br></pre></td></tr></table></figure><p><strong>注：<br>1.while循环的条件需要得到布尔类型，True表示继续循环，False表示终止循环<br>2.需要设置循环条件，如i+=1配合i&lt;5，就能确保循环的有限次<br>3.空格缩进和if判断一样，都需要设置</strong></p><h2 id="3-2-while循环的基础案例">3.2 while循环的基础案例</h2><p>案例：<br>设置一个范围1-100的随机整数变量，通过while循环，配合input语句，判断输入的数字是否等于随机数，要求如下：</p><ul><li>无限次机会</li><li>每次一猜不中，会提示大了或小了</li><li>猜完数字后，提示猜了几次</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 猜数字</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment"># num为生成的随机数，count用于记录猜了几次</span></span><br><span class="line">num = random.randint(<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">guess_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的猜测结果&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> guess_num != num:</span><br><span class="line">    <span class="keyword">if</span> guess_num &gt; num:</span><br><span class="line">        guess_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;你猜的数字大了,请再猜一次&quot;</span>))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        guess_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;你猜的数字小了,请再猜一次&quot;</span>))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;恭喜你猜对了，你一共猜了<span class="subst">&#123;count&#125;</span>次&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-3-while循环的嵌套">3.3 while循环的嵌套</h2><p>while嵌套循环的语法格式：</p><p>while   条件:</p><p>     满足条件时要做的事情1<br>     满足条件时要做的事情2<br>     满足条件时要做的事情3<br>     …（省略）…</p><p>     while   条件:</p><p>          满足条件时要做的事情1<br>          满足条件时要做的事情2<br>          满足条件时要做的事情3<br>          …（省略）…</p><p>示例：表白100天，每天都会送10朵玫瑰花</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表白100天，每天送10朵玫瑰花</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天是第<span class="subst">&#123;i&#125;</span>天，准备表白...&quot;</span>)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;这是今天送的第<span class="subst">&#123;j&#125;</span>朵玫瑰花&quot;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;小美我喜欢你&quot;</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;坚持到第<span class="subst">&#123;i - <span class="number">1</span>&#125;</span>天，表白成功&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-4-while嵌套循环案例">3.4 while嵌套循环案例</h2><p>案例：<br>使用while循环打印九九乘法表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">9</span>:</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= i:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;j&#125;</span>×<span class="subst">&#123;i&#125;</span>=<span class="subst">&#123;i * j&#125;</span>\t&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>()  <span class="comment"># print空内容就是换行</span></span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1×1=1</span><br><span class="line">1×2=22×2=4</span><br><span class="line">1×3=32×3=63×3=9</span><br><span class="line">1×4=42×4=83×4=124×4=16</span><br><span class="line">1×5=52×5=103×5=154×5=205×5=25</span><br><span class="line">1×6=62×6=123×6=184×6=245×6=306×6=36</span><br><span class="line">1×7=72×7=143×7=214×7=285×7=356×7=427×7=49</span><br><span class="line">1×8=82×8=163×8=244×8=325×8=406×8=487×8=568×8=64</span><br><span class="line">1×9=92×9=183×9=274×9=365×9=456×9=547×9=638×9=729×9=81</span><br></pre></td></tr></table></figure><h2 id="3-5-for循环语法">3.5 for循环语法</h2><h3 id="3-5-1-for循环的基础语法">3.5.1 for循环的基础语法</h3><p>while循环与for循环的区别：</p><ul><li>while循环的循环条件是自定义的，自行控制循环条件</li><li>for循环是一种“轮询”机制，是对一批内容进行“逐个处理”</li><li>for循环无法定义循环条件，只能从被处理的数据集中依次取出内容进行处理，所以理论上Python中的for循环无法构建无限循环</li></ul><p><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%B8%89%EF%BC%89/while%E5%BE%AA%E7%8E%AF.png" alt=""></p><p><img src="/image/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python%EF%BC%88%E4%B8%89%EF%BC%89/for%E5%BE%AA%E7%8E%AF.png" alt=""></p><p>for循环语法：<br>for   临时变量   in   待处理数据集:</p><p>        循环满足条件时执行的代码</p><p><strong>注：与C语言或Java语言中的for循环不同，Python中的for循环需要提前设置好循环范围，循环的推动由程序自动进行，所以for循环也被叫做遍历循环</strong></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历字符串</span></span><br><span class="line"><span class="comment"># 定义字符串name</span></span><br><span class="line">name = <span class="string">&quot;itheima&quot;</span></span><br><span class="line"><span class="comment"># for循环处理字符串</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> name:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i</span><br><span class="line">t</span><br><span class="line">h</span><br><span class="line">e</span><br><span class="line">i</span><br><span class="line">m</span><br><span class="line">a</span><br></pre></td></tr></table></figure><h3 id="3-5-2-for循环的基础案例">3.5.2 for循环的基础案例</h3><p>for循环基础案例：<br>数一数有几个a：定义字符串name，内容为itheima is a brand of itcast，通过for循环遍历此字符串，统计有几个字母a</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;itheima is a brand of itcast&quot;</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> name:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;该字符串中一共有<span class="subst">&#123;count&#125;</span>个a&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">该字符串中一共有4个a</span><br></pre></td></tr></table></figure><h3 id="3-5-3-range语句">3.5.3 range语句</h3><p>for循环语法：<br>for   临时变量   in   待处理数据集:</p><p>        循环满足条件时执行的代码</p><p>for循环语法中的待处理数据集，严格来说称之为：序列类型<br>序列类型是指：其内容可以一个个一次取出的一种类型，包括：</p><ul><li>字符串</li><li>列表</li><li>元组</li><li>等</li></ul><p>range语句：<br>利用range语句我们可以获得一个简单的数字序列。</p><ul><li>语法1：<br>range(num): 获取一个从0开始，到num结束的数字序列（不含num本身），如range(5)取得的数据是：[0,1,2,3,4]</li><li>语法2：<br>range(num1,num2)：获得一个从num1开始，到num2结束的数字序列（不包含num2本身），如range(5,10)取得的数据是[5,6,7,8,9]</li><li>语法3:<br>range(num1,num2,step)：获得一个从num1开始，到num2结束的数字序列（不包含num2本身），数字之间的步长以step为准（step默认为1），如range(5,10,2)取得的数据是[5,7,9]</li></ul><h3 id="3-5-4-变量作用域">3.5.4 变量作用域</h3><p>for循环语法：<br>for   临时变量   in   待处理数据集:</p><p>        循环满足条件时执行的代码</p><p>for循环中的临时变量，在编程规范上，其作用范围（作用域）只限定在for循环内部<br>如果在for循环外部访问临时变量：</p><ul><li>实际上是可以访问到的</li><li>但在编程规范上是不允许、不建议这么做的</li><li>如需访问，可以再for循环上面定义该变量</li></ul><h2 id="3-6-for循环的嵌套">3.6 for循环的嵌套</h2><h3 id="3-6-1-for循环嵌套语法">3.6.1 for循环嵌套语法</h3><p>for   临时变量   in   待处理数据集:</p><p>        循环满足条件时执行的代码</p><p>        for   临时变量   in   待处理数据集:</p><p>                循环满足条件时执行的代码</p><p>示例：表白100天，每天都会送10朵玫瑰花</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表白100天，每天送10朵玫瑰花</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天是第<span class="subst">&#123;i&#125;</span>天，准备表白...&quot;</span>)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;这是今天送的第<span class="subst">&#123;j&#125;</span>朵玫瑰花&quot;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;小美我喜欢你&quot;</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;坚持到第<span class="subst">&#123;i - <span class="number">1</span>&#125;</span>天，表白成功&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-6-2-for循环嵌套案例">3.6.2 for循环嵌套案例</h3><p>案例：打印九九乘法表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;j&#125;</span>×<span class="subst">&#123;i&#125;</span>=<span class="subst">&#123;i * j&#125;</span>\t&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>()  <span class="comment"># print空内容就是换行</span></span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="3-7-循环中断：break和continue">3.7 循环中断：break和continue</h2><h3 id="3-7-1-continue关键字">3.7.1 continue关键字</h3><ul><li>continue关键字用于：中断本次循环，直接进入下一次循环</li><li>continue可以用于：for循环和while循环，效果一致</li><li>continue在嵌套循环时之作用于其所在的循环</li></ul><p>语法：<br>for   i   in   range(1,100):</p><p>           语句1<br>           continue<br>           语句2</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;语句1&quot;</span>)</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;语句2&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语句1</span><br><span class="line">语句1</span><br><span class="line">语句1</span><br><span class="line">语句1</span><br><span class="line">语句1</span><br></pre></td></tr></table></figure><h3 id="3-7-2-break关键字">3.7.2 break关键字</h3><ul><li>break关键字用于：直接结束循环</li><li>break可用于：for循环和while循环，效果一致</li><li>break在嵌套循环时之作用于其所在的循环</li></ul><p>语法：<br>for   i   in   range(1,100):</p><p>           语句1<br>           continue<br>           语句2</p><p>语句3</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;语句1&quot;</span>)</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;语句2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;语句3&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语句1</span><br><span class="line">语句3</span><br></pre></td></tr></table></figure><h2 id="3-8-循环综合案例">3.8 循环综合案例</h2><p>练习案例：发工资<br>某公司，账户余额有1万元，给20名员工发工资。</p><ul><li>员工编号从1到20，从编号1开始，依次领取工资，每人可领取1000元</li><li>领工资时，财务判断员工的绩效分（1-10）（随机生成），如果低于5，不发工资，换下一位</li><li>如果工资发完了，结束发工资</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">account = <span class="number">10000</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">21</span>):</span><br><span class="line">    score = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 先判断账户是否有余额，如果没有余额直接结束发工资，不用再继续判断绩效分</span></span><br><span class="line">    <span class="keyword">if</span> account == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;工资发完了，下个月领取吧&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 判断绩效分</span></span><br><span class="line">    <span class="keyword">if</span> score &lt; <span class="number">5</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;员工<span class="subst">&#123;num&#125;</span>,绩效分<span class="subst">&#123;score&#125;</span>,低于5，不发工资，下一位&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 绩效分大于等于5，判断账户余额是否够发工资，够的话发工资，不够的话直接结束发工资</span></span><br><span class="line">    <span class="keyword">if</span> account &gt;= <span class="number">1000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;向员工<span class="subst">&#123;num&#125;</span>发工资1000元，账户余额还有<span class="subst">&#123;account - <span class="number">1000</span>&#125;</span>元&quot;</span>)</span><br><span class="line">        account -= <span class="number">1000</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;工资发完了，下个月领取吧&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">向员工1发工资1000元，账户余额还有9000元</span><br><span class="line">向员工2发工资1000元，账户余额还有8000元</span><br><span class="line">员工3,绩效分2,低于5，不发工资，下一位</span><br><span class="line">员工4,绩效分4,低于5，不发工资，下一位</span><br><span class="line">向员工5发工资1000元，账户余额还有7000元</span><br><span class="line">向员工6发工资1000元，账户余额还有6000元</span><br><span class="line">向员工7发工资1000元，账户余额还有5000元</span><br><span class="line">员工8,绩效分2,低于5，不发工资，下一位</span><br><span class="line">员工9,绩效分2,低于5，不发工资，下一位</span><br><span class="line">向员工10发工资1000元，账户余额还有4000元</span><br><span class="line">向员工11发工资1000元，账户余额还有3000元</span><br><span class="line">向员工12发工资1000元，账户余额还有2000元</span><br><span class="line">向员工13发工资1000元，账户余额还有1000元</span><br><span class="line">向员工14发工资1000元，账户余额还有0元</span><br><span class="line">工资发完了，下个月领取吧</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始学Python(二)</title>
      <link href="/2024/04/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%BA%8C)/"/>
      <url>/2024/04/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1>第二章 Python判断语句</h1><h2 id="2-1-布尔类型和比较运算符">2.1 布尔类型和比较运算符</h2><h3 id="2-1-1-布尔类型">2.1.1 布尔类型</h3><p>布尔（bool）表达现实生活中的逻辑，即真和假</p><ul><li>True表示真</li><li>False表示假</li></ul><p>Bool类型被划分为数字类型，是因为True和False本质上是一个数字，True记作1，False记作0</p><h3 id="2-1-2-布尔类型的定义">2.1.2 布尔类型的定义</h3><p>定义变量存储布尔类型数据：变量名称 = 布尔类型字面量</p><h3 id="2-1-3-比较运算符">2.1.3 比较运算符</h3><p>布尔类型的数据，不仅可以通过定义得到，也可以通过比较运算符进行内容比较得到<br>如下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = <span class="number">10</span> &gt; <span class="number">5</span></span><br><span class="line">print(f<span class="string">&quot;10 &gt; 5 的结果是&#123;result&#125;，类型是&#123;type(result)&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 &gt; 5 的结果是True，类型是&lt;class &#x27;bool&#x27;&gt;</span><br></pre></td></tr></table></figure><p>常用的比较运算符：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">判断内容是否相等，满足为True,不满足为False</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">判断内容是否不相等，满足为True,不满足为False</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">判断运算符左侧内容是否大于右侧内容，满足为True,不满足为False</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">判断运算符左侧内容是否小于右侧内容，满足为True,不满足为False</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">判断运算符左侧内容是否大于等于右侧内容，满足为True,不满足为False</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">判断运算符左侧内容是否小于等于右侧内容，满足为True,不满足为False</td></tr></tbody></table><h2 id="2-2-if语句的基本格式">2.2 if语句的基本格式</h2><p>if语句格式如下：</p><p>if   要判断的条件：</p><p>         条件成立时，要做的事情</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;我已经成年了&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;时间过得真快啊&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我已经成年了</span><br><span class="line">时间过得真快啊</span><br></pre></td></tr></table></figure><h2 id="2-3-if-else语句">2.3 if else语句</h2><p>if else语句格式：</p><p>if   条件:</p><p>     满足条件时要做的事情1<br>     满足条件时要做的事情2<br>     满足条件时要做的事情3<br>     …（省略）…</p><p>else:</p><p>     不满足条件时要做的事情1<br>     不满足条件时要做的事情2<br>     不满足条件时要做的事情3<br>     …（省略）…</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;欢迎来到黑马儿童游乐场，儿童免费，成人收费&quot;</span>)</span><br><span class="line">age = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的年龄：&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您已成年，游玩需要补票10元&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您未成年，可以免费游玩&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;祝您游玩愉快&quot;</span>)</span><br></pre></td></tr></table></figure><p>输入结果为20（&gt;18）时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马儿童游乐场，儿童免费，成人收费</span><br><span class="line">请输入你的年龄：20</span><br><span class="line">您已成年，游玩需要补票10元</span><br><span class="line">祝您游玩愉快</span><br></pre></td></tr></table></figure><p>输入结果为16（&lt;18）时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马儿童游乐场，儿童免费，成人收费</span><br><span class="line">请输入你的年龄：16</span><br><span class="line">您未成年，可以免费游玩</span><br><span class="line">祝您游玩愉快</span><br></pre></td></tr></table></figure><h2 id="2-4-if-elif-else语句">2.4 if elif else语句</h2><p>if elif else语句格式：</p><p>if   条件1:</p><p>     满足条件1时要做的事情1<br>     满足条件1时要做的事情2<br>     满足条件1时要做的事情3<br>     …（省略）…</p><p>elif  条件2</p><p>     满足条件2时要做的事情1<br>     满足条件2时要做的事情2<br>     满足条件2时要做的事情3<br>     …（省略）…</p><p>elif  条件3</p><p>     满足条件3时要做的事情1<br>     满足条件3时要做的事情2<br>     满足条件3时要做的事情3<br>     …（省略）…</p><p>else:</p><p>     所有条件都不满足时要做的事情1<br>     所有条件都不满足时要做的事情2<br>     所有条件都不满足时要做的事情3<br>     …（省略）…</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;欢迎来到黑马动物园。&quot;</span>)</span><br><span class="line">height = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的身高（cm）：&quot;</span>))</span><br><span class="line">vip_level = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的VIP级别（1~5）:&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> height &lt; <span class="number">120</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的身高小于120cm，可以免费游玩。&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> vip_level &gt; <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的VIP等级大于3，可以免费游玩。&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不好意思，您所有条件都不满足，需要购票10元。&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;祝您游玩愉快。&quot;</span>)</span><br></pre></td></tr></table></figure><p>输入结果为110 4（两个条件都满足）时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马动物园。</span><br><span class="line">请输入你的身高（cm）：110</span><br><span class="line">请输入你的VIP级别（1~5）:4</span><br><span class="line">您的身高小于120cm，可以免费游玩。</span><br><span class="line">祝您游玩愉快。</span><br></pre></td></tr></table></figure><p>输入结果为110 2（身高满足，VIP等级不满足）时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马动物园。</span><br><span class="line">请输入你的身高（cm）：110</span><br><span class="line">请输入你的VIP级别（1~5）:2</span><br><span class="line">您的身高小于120cm，可以免费游玩。</span><br><span class="line">祝您游玩愉快。</span><br></pre></td></tr></table></figure><p>输入结果为130 4（身高不满足，VIP等级满足）时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马动物园。</span><br><span class="line">请输入你的身高（cm）：130</span><br><span class="line">请输入你的VIP级别（1~5）:4</span><br><span class="line">您的VIP等级大于3，可以免费游玩。</span><br><span class="line">祝您游玩愉快。</span><br></pre></td></tr></table></figure><p>输入结果为130 2（身高不满足，VIP等级也不满足）时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马动物园。</span><br><span class="line">请输入你的身高（cm）：130</span><br><span class="line">请输入你的VIP级别（1~5）:2</span><br><span class="line">不好意思，您所有条件都不满足，需要购票10元。</span><br><span class="line">祝您游玩愉快。</span><br></pre></td></tr></table></figure><p><strong>注：还有一种简洁式写法，即将输入直接放入条件判断中，如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;欢迎来到黑马动物园。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的身高（cm）：&quot;</span>)) &lt; <span class="number">120</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的身高小于120cm，可以免费游玩。&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的VIP级别（1~5）:&quot;</span>)) &gt; <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的VIP等级大于3，可以免费游玩。&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不好意思，您所有条件都不满足，需要购票10元。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;祝您游玩愉快。&quot;</span>)</span><br></pre></td></tr></table></figure><p>这样做不仅可以使代码更加简洁，还可以减少输入</p><h2 id="2-5-判断语句的嵌套">2.5 判断语句的嵌套</h2><p>对于需要多层次的判断，我们可以自由组合if elif else，从而完成特定需求的要求<br>多层次嵌套的格式为：<br>if   条件1:</p><p>     满足条件1时要做的事情1<br>     满足条件1时要做的事情2</p><p>     if  条件2</p><p>          满足条件2时要做的事情1<br>          满足条件2时要做的事情2</p><p>只有第一个if满足条件，才会执行第二个if</p><p><strong>注：嵌套的关键点在于：空格缩进；通过空格缩进来决定语句之间的层次关系</strong></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;欢迎来到黑马动物园&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的身高&quot;</span>)) &gt; <span class="number">120</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;你的身高大于120cm，不可以免费&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不过如果你的VIP等级大于3，可以免费游玩&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的VIP等级&quot;</span>)) &gt; <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;恭喜你，你的VIP等级大于3，可以免费游玩&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;对不起，你的VIP等级小于3，不可以免费游玩，需要补票10元&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎你小朋友，可以免费游玩&quot;</span>)</span><br></pre></td></tr></table></figure><p>如图：判断一共有两层，当外层if满足时继续执行内层判断；当外层if不满足时，直接执行外层的else<br>如输入130 3时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马动物园</span><br><span class="line">请输入你的身高130</span><br><span class="line">你的身高大于120cm，不可以免费</span><br><span class="line">不过如果你的VIP等级大于3，可以免费游玩</span><br><span class="line">请输入你的VIP等级3</span><br><span class="line">对不起，你的VIP等级小于3，不可以免费游玩，需要补票10元</span><br></pre></td></tr></table></figure><p>当输入110时，打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到黑马动物园</span><br><span class="line">请输入你的身高110</span><br><span class="line">欢迎你小朋友，可以免费游玩</span><br></pre></td></tr></table></figure><h2 id="2-6-判断语句综合案例">2.6 判断语句综合案例</h2><p>案例要求：<br>1.数字随机产生，范围1-10<br>2.有三次机会，通过三层嵌套判断实现<br>3.每次猜不中时，提示大了还是小了</p><p>具体实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">num = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">guess_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入第一次猜测的数字：&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> guess_num == num:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;恭喜你第一次就猜中了&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> guess_num &gt; num:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;你猜测的数字大了&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;你猜测的数字小了&quot;</span>)</span><br><span class="line"></span><br><span class="line">    guess_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你第二次猜测的数字：&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> guess_num == num:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;恭喜你第二次猜中了&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> guess_num &gt; num:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;你猜测的数字大了&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;你猜测的数字小了&quot;</span>)</span><br><span class="line"></span><br><span class="line">        guess_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你第三次猜测的数字：&quot;</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> guess_num == num:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;恭喜你终于猜中了&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;对不起你没猜中，正确答案是<span class="subst">&#123;num&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始学Python(一)</title>
      <link href="/2024/04/07/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%B8%80)/"/>
      <url>/2024/04/07/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6Python(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1>第一章 Python基础语法</h1><h2 id="1-0-常用快捷键">1.0 常用快捷键</h2><ul><li>ctrl+alt+s: 打开软件设置</li><li>ctrl+d: 复制当前行代码</li><li>shift+alt+上\下: 将当前行代码上移或下移</li><li>ctrl+shift+f10: 运行当前代码文件</li><li>shift+f6: 重命名文件</li><li>ctrl+a: 全选</li><li>ctrl+c\v\x: 复制、粘贴、剪切</li><li>ctrl+f: 搜索</li></ul><h2 id="1-1-字面量">1.1 字面量</h2><h3 id="1-1-1-字面量">1.1.1 字面量</h3><p>在代码中，被写下来的固定的值，称之为字面量。</p><h3 id="1-1-2-Python常用数据类型">1.1.2 Python常用数据类型</h3><p>（1）数字（Number）：支持整数（int），浮点数（float），复数（complex），布尔（bool）；<br>（2）字符串（String）：描述文本的一种数据类型；<br>（3）列表（List）：有序地可变序列；<br>（4）元组（Tuple）：有序地不可变序列；<br>（5）集合（Set）：无序的不重复集合；<br>（6）字典（Dictionary）：无序Key-Value集合。</p><h2 id="1-2-注释">1.2 注释</h2><h3 id="1-2-1-单行注释">1.2.1 单行注释</h3><p>以#开头，#右边的所有文字作为注释内容</p><h3 id="1-2-2-多行注释">1.2.2 多行注释</h3><p>以一对三个双引号（“”“注释内容”“”）来解释说明一段代码的作用及使用方法</p><h2 id="1-3-变量">1.3 变量</h2><h3 id="1-3-1-变量">1.3.1 变量</h3><p>在程序运行时，能够存储结算结果或能表示值的抽象概念</p><h3 id="1-3-2-变量的定义格式">1.3.2 变量的定义格式</h3><p>变量名称 = 变量的值<br>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">money = <span class="number">50</span></span><br></pre></td></tr></table></figure><h2 id="1-4-数据类型">1.4 数据类型</h2><h3 id="1-4-1-常见数据类型">1.4.1 常见数据类型</h3><p>（1）string：字符串类型<br>（2）int：整型（有符号）<br>（3）float：浮点型（有符号）</p><h3 id="1-4-2-验证数据类型">1.4.2 验证数据类型</h3><p>可以利用type()语句验证数据类型,type()语句使用方式有三种：<br>1.在print语句中直接输出类型信息，示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="string">&quot;黑马程序员&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">666</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">13.14</span>))</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;str&#x27;&gt;</span><br><span class="line">&lt;class &#x27;int&#x27;&gt;</span><br><span class="line">&lt;class &#x27;float&#x27;&gt;</span><br></pre></td></tr></table></figure><p>2.使用变量存储type()的结果（返回值），示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string_type = <span class="built_in">type</span>(<span class="string">&quot;黑马程序员&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(string_type)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;str&#x27;&gt;</span><br></pre></td></tr></table></figure><p>3.查看变量中存储的数据类型，示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;黑马程序员&quot;</span></span><br><span class="line">name_type = <span class="built_in">type</span>(name)</span><br><span class="line"><span class="built_in">print</span>(name_type)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;str&#x27;&gt;</span><br></pre></td></tr></table></figure><p><strong>注：type()查看的是变量存储的数据的类型，而不是变量的类型，变量是没有类型的</strong></p><h2 id="1-5-数据类型转换">1.5 数据类型转换</h2><p>常见的转换语句：</p><table><thead><tr><th>语句</th><th>说明</th></tr></thead><tbody><tr><td>int(x)</td><td>将x转换为整数</td></tr><tr><td>float(x)</td><td>将x转换为浮点数</td></tr><tr><td>str(x)</td><td>将x转换为字符串</td></tr></tbody></table><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将数字转换为字符串</span></span><br><span class="line">int_str = <span class="built_in">str</span>(<span class="number">11</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(int_str), int_str)</span><br><span class="line">float_str=<span class="built_in">str</span>(<span class="number">13.14</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(float_str), float_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串转换为数字</span></span><br><span class="line">str_int = <span class="built_in">int</span>(<span class="string">&quot;11&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(str_int), str_int)</span><br><span class="line">str_float = <span class="built_in">float</span>(<span class="string">&quot;13.14&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(str_float), str_float)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 整数转浮点数</span></span><br><span class="line">int_float = <span class="built_in">float</span>(<span class="number">11</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(int_float), int_float)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浮点数转整数</span></span><br><span class="line">float_int = <span class="built_in">int</span>(<span class="number">13.14</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(float_int), float_int)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;str&#x27;&gt; 11</span><br><span class="line">&lt;class &#x27;str&#x27;&gt; 13.14</span><br><span class="line">&lt;class &#x27;int&#x27;&gt; 11</span><br><span class="line">&lt;class &#x27;float&#x27;&gt; 13.14</span><br><span class="line">&lt;class &#x27;int&#x27;&gt; 11.0</span><br><span class="line">&lt;class &#x27;float&#x27;&gt; 13</span><br></pre></td></tr></table></figure><h2 id="1-6-标识符">1.6 标识符</h2><h3 id="1-6-1-什么是标识符">1.6.1 什么是标识符</h3><p>在Python中，我们可以给很多东西起名字，比如：变量的名字，方法的名字，类的名字等等，这些名字我们统一称之为标识符，用来作为内容的标识。</p><h3 id="1-6-2-标识符命名规则">1.6.2 标识符命名规则</h3><ul><li>内容限定</li><li>大小写敏感</li><li>不可使用关键字</li></ul><p>标识符中只允许出现四类元素：</p><ul><li>英文</li><li>中文 (不推荐使用)</li><li>数字 (不可以用在开头)</li><li>下划线 (_)</li></ul><h3 id="1-6-3-变量命名规范">1.6.3 变量命名规范</h3><ul><li>变量名<ul><li>见名知意</li><li>下划线命名法</li><li>英文字母全小写</li></ul></li><li>类名</li><li>方法名</li></ul><h2 id="1-7-运算符">1.7 运算符</h2><h3 id="1-7-1-算术运算符">1.7.1 算术运算符</h3><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加</td><td style="text-align:center">a + b</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减</td><td style="text-align:center">a - b</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘</td><td style="text-align:center">a * b</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除</td><td style="text-align:center">a / b</td></tr><tr><td style="text-align:center">//</td><td style="text-align:center">取整除</td><td style="text-align:center">返回商的整数部分，如9//2结果为4</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">取余</td><td style="text-align:center">b % a</td></tr><tr><td style="text-align:center">**</td><td style="text-align:center">指数</td><td style="text-align:center">10 ** 20表示10的20次方</td></tr></tbody></table><h3 id="1-7-2-赋值运算符">1.7.2 赋值运算符</h3><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">赋值运算符</td><td style="text-align:center">把=右边的结果赋给左边的变量，如num = 1 + 2 * 3，结果num的值为7</td></tr></tbody></table><h3 id="1-7-3-复合赋值运算符">1.7.3 复合赋值运算符</h3><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">+=</td><td style="text-align:center">加法赋值运算符</td><td style="text-align:center">c+=a等效于c=c+a</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">减法赋值运算符</td><td style="text-align:center">c-=a等效于c=c-a</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">乘法赋值运算符</td><td style="text-align:center">c*=a等效于c=c*a</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">除法赋值运算符</td><td style="text-align:center">c/=a等效于c=c/a</td></tr><tr><td style="text-align:center">//=</td><td style="text-align:center">取整除法赋值运算符</td><td style="text-align:center">c//=a等效于c=c//a</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">取余法赋值运算符</td><td style="text-align:center">c%=a等效于c=c+%</td></tr><tr><td style="text-align:center">**=</td><td style="text-align:center">指数法赋值运算符</td><td style="text-align:center">c**=a等效于c=c**a</td></tr></tbody></table><h2 id="1-8-字符串的三种定义方式">1.8 字符串的三种定义方式</h2><h3 id="1-8-1-字符串定义形式：">1.8.1 字符串定义形式：</h3><ul><li>单引号定义法：name = ‘黑马程序员’</li><li>双引号定义法：name = “黑马程序员”</li><li>三引号定义法：name = “”“黑马程序员”“”</li></ul><p><strong>注：三引号定义法和多行注释的写法一样，同样支持换行操作，使用变量接收它，它就是字符串，不使用变量接收它，它就可以作为多行注释使用</strong></p><h3 id="1-8-2-字符串的引号嵌套">1.8.2 字符串的引号嵌套</h3><p>当想要定义的字符串本身含有引号时，可以使用以下几种方式：</p><ul><li>单引号定义法，可以内含双引号</li><li>双引号定义法，可以内含单引号</li><li>可以使用转义字符()来将引号解除效用，变成普通字符串</li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;&quot;黑马程序员&quot;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name = <span class="string">&quot;&#x27;黑马程序员&#x27;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name = <span class="string">&quot;\&quot;黑马程序员&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;黑马程序员&quot;</span><br><span class="line">&#x27;黑马程序员&#x27;</span><br><span class="line">&quot;黑马程序员</span><br></pre></td></tr></table></figure><h2 id="1-9-字符串的拼接">1.9 字符串的拼接</h2><p>如果我们有两个字符串（文本）字面量，可以将其拼接成一个字符串，通过+号即可完成，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;学IT来黑马&quot;</span>+<span class="string">&quot;月薪过万&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">学IT来黑马月薪过万</span><br></pre></td></tr></table></figure><p>不过一般，单纯的2个字符串字面量进行拼接显得很呆，一般，字面量和变量或变量和变量质检会使用拼接，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;黑马程序员&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我的名字是&quot;</span> + name)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我的名字是黑马程序员</span><br></pre></td></tr></table></figure><p><strong>注：整数及浮点数等非字符串类型无法直接使用’+'与字符串进行拼接</strong></p><h2 id="1-10-字符串格式化">1.10 字符串格式化</h2><p>通过%s进行占位拼接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;黑马程序员&quot;</span></span><br><span class="line">message = <span class="string">&quot;学IT就来 %s&quot;</span> % name</span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure><p>其中：%表示占位，s表示将变量变成字符串放入占位的地方</p><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">学IT就来 黑马程序员</span><br></pre></td></tr></table></figure><p>数字类型也可以进行占位拼接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class_num = <span class="number">57</span></span><br><span class="line">avg_salary = <span class="number">16781</span></span><br><span class="line">message = <span class="string">&quot;Python大数据学科，北京%s期，毕业平均工资：%s&quot;</span> % (class_num, avg_salary)</span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure><p>打印结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python大数据学科，北京57期，毕业平均工资：16781</span><br></pre></td></tr></table></figure><p>Python中常用的数据类型占位：</p><table><thead><tr><th style="text-align:center">格式符号</th><th style="text-align:center">转化</th></tr></thead><tbody><tr><td style="text-align:center">%s</td><td style="text-align:center">将内容转换成字符串，放入占位位置</td></tr><tr><td style="text-align:center">%d</td><td style="text-align:center">将内容转换成整型，放入占位位置</td></tr><tr><td style="text-align:center">%f</td><td style="text-align:center">将内容转换成浮点型，放入占位位置</td></tr></tbody></table><h2 id="1-11-字符串格式化的精度控制">1.11 字符串格式化的精度控制</h2><p>我们可以使用辅助符号&quot;m.n&quot;来控制数据的宽度和精度</p><ul><li>m，控制宽度，要求是数字（很少使用），设置的宽度小于数字自身时不生效</li><li>n，控制小数点精度，要求是数字，会进行小数的四舍五入</li></ul><p>示例：</p><ul><li>%5d：表示将整数的宽度控制在5位，如数字11被设置为5d后就会变成[空格][空格][空格]11，用三个空格补足宽度</li><li>%7.2f：表示将宽度控制在7位，小数点后精度控制在2位，如对11.345进行精度控制%7.2后变为[空格][空格]11.35</li></ul><h2 id="1-12-字符串格式化方式（二）">1.12 字符串格式化方式（二）</h2><p>快速格式化，通过语法：f&quot;内容{变量}&quot;的格式来快速进行格式化<br>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;传智播客&quot;</span></span><br><span class="line">set_up_year = <span class="number">2006</span></span><br><span class="line">stock_price = <span class="number">19.99</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;我是<span class="subst">&#123;name&#125;</span>, 我成立于<span class="subst">&#123;set_up_year&#125;</span>, 我今天的股票价格是：<span class="subst">&#123;stock_price&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是传智播客, 我成立于2006, 我今天的股票价格是：19.99</span><br></pre></td></tr></table></figure><p><strong>注：此种方法不会理会类型，但不能做精度控制。适合对精度没有要求时快速使用</strong></p><h2 id="1-13-对表达式进行格式化">1.13 对表达式进行格式化</h2><p>表达式：一条具有明确执行结果的代码语句<br>使用情况：无需对表达式结果进行存储，可以直接使用结果<br>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1 * 1的结果是：%d&quot;</span> % (<span class="number">1</span> * <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;1 * 1的结果是：<span class="subst">&#123;<span class="number">1</span> * <span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;字符串在Python中的类型是：%s&quot;</span> % <span class="built_in">type</span>(<span class="string">&quot;字符串&quot;</span>))</span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 * 1的结果是：1</span><br><span class="line">1 * 1的结果是：1</span><br><span class="line">字符串在Python中的类型是：&lt;class &#x27;str&#x27;&gt;</span><br></pre></td></tr></table></figure><h2 id="1-14-数据输入（input语句）">1.14 数据输入（input语句）</h2><ul><li>数据输入：input()</li><li>数据输出：print()<br>示例：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;请告诉我你是谁?&quot;</span>)</span><br><span class="line">name = <span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我知道了，你是%s&quot;</span> % name)</span><br></pre></td></tr></table></figure><p>输入：张三</p><p>打印结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请告诉我你是谁?</span><br><span class="line">张三</span><br><span class="line">我知道了，你是张三</span><br></pre></td></tr></table></figure><p>input前的print可以简化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请告诉我你是谁?&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我知道了，你是%s&quot;</span> % name)</span><br></pre></td></tr></table></figure><p><strong>注：input语句会自动将输入的内容转换为str类型，若要得到int类型的结果，可以进行数据类型转换</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法学习-动态规划</title>
      <link href="/2024/01/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/2024/01/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1>算法学习——动态规划</h1><p>动态规划，英文：Dynamic Programming，简称DP，如果某一问题有很多重叠子问题，使用动态规划是最有效的，动态规划中每一个状态一定是由上一个状态推导出来的。所以动态规划问题的解题关键就是找出当前状态与上个状态之间的关系。</p><p>动态规划问题的主要解题步骤：</p><ol><li>确定dp数组（dp table）以及下标的含义</li><li>确定递推公式</li><li>dp数组如何初始化</li><li>确定遍历顺序</li><li>举例推导dp数组</li></ol><p>本篇主要关于几个常见动态规划算法案例</p><h2 id="一、楼梯问题">一、楼梯问题</h2><h3 id="1-1-爬楼梯问题（Leetcode70）">1.1 爬楼梯问题（Leetcode70）</h3><h4 id="1-1-1-问题描述">1.1.1 问题描述</h4><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。<br>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><p>示例 ：<br><strong>输入：</strong> n = 2<br><strong>输出：</strong> 2<br><strong>解释：</strong> 有两种方法可以爬到楼顶。</p><ol><li>1 阶 + 1 阶</li><li>2 阶</li></ol><h4 id="1-1-2-解决思想">1.1.2 解决思想</h4><p>在该问题中，到达第1层台阶只有一种方法，即直接走一步，到达第2级台阶共有两种方法：1.先走一步，再走一步，2.直接走两步。<br>从第三级台阶开始，由于每次只能走一级或两级台阶，所以我们只能从该级台阶的前一级台阶或前两级台阶到达该级台阶。<br>如：到达3级台阶只能由第1级台阶出发一次走两步，或从第2级台阶出发直接走一步到达3级台阶，所以到达第3级台阶的方法数为到达第1级台阶的方法数+到达第2级台阶的方法数。<br>根据以上思想，我们可以<br>1.设置dp数组dp[i]，其中dp[i]表示到达第i级台阶的方法数；<br>2.dp[i]可由dp[i-1]和dp[i-2]推导而来，dp[i]=dp[i-2]+dp[i-1]；<br>3.关于初始化，因为当i=0时无意义，所以初始化应为dp[1]=1,dp[2]=2；<br>4.由于dp[i]是由前面两个数据推导而来，所以应该从前往后遍历。</p><h4 id="1-1-3-最终代码">1.1.3 最终代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">climbStairs</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="comment">// dp数组，其中dp[i]表示到达第i级台阶的方法数</span></span><br><span class="line">    <span class="type">int</span>* dp = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * (n + <span class="number">1</span>));</span><br><span class="line">    dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    dp[<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// i&lt;=2会造成dp数组无意义或越界，所以应从3开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">3</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        dp[i] = dp[i - <span class="number">1</span>] + dp[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-使用最小体力爬楼梯（Leetcode746）">1.2 使用最小体力爬楼梯（Leetcode746）</h3><h4 id="1-2-1-问题描述">1.2.1 问题描述</h4><p>给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。<br>你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。<br>请你计算并返回达到楼梯顶部的最低花费。</p><p>示例 1：<br>输入：cost = [10,15,20]<br>输出：15<br>解释：你将从下标为 1 的台阶开始。</p><ul><li>支付 15 ，向上爬两个台阶，到达楼梯顶部。<br>总花费为 15 。</li></ul><p>示例 2：<br>输入：cost = [1,100,1,1,1,100,1,1,100,1]<br>输出：6<br>解释：你将从下标为 0 的台阶开始。</p><ul><li>支付 1 ，向上爬两个台阶，到达下标为 2 的台阶。</li><li>支付 1 ，向上爬两个台阶，到达下标为 4 的台阶。</li><li>支付 1 ，向上爬两个台阶，到达下标为 6 的台阶。</li><li>支付 1 ，向上爬一个台阶，到达下标为 7 的台阶。</li><li>支付 1 ，向上爬两个台阶，到达下标为 9 的台阶。</li><li>支付 1 ，向上爬一个台阶，到达楼梯顶部。<br>总花费为 6 。</li></ul><h4 id="1-2-2-解决思想">1.2.2 解决思想</h4><p>该问题与上一问题类似，本问题中到达第i级台阶也只有两种方案：1.由第i-2级台阶走一步，2.由第i-1级台阶走一步，所以到达第i级台阶的最小花费就是从第i-1级台阶上来还是从第i-2级台阶上来。<br>根据以上思想，我们可以<br>1.设置dp数组dp[i]，其中dp[i]表示到达第i级台阶的最小体力花费;<br>2.dp[i]可由dp[i-1]和dp[i-2]推导而来，dp[i]=fmin(dp[i-2]+cost[i-2],dp[i-1]+dp[i-1]);<br>3.关于初始化，因为你选择从下标为 0 或下标为 1 的台阶开始爬楼梯，所以dp[0]=0,dp[1]=0，即到达第0级和第1级台阶不消耗体力;<br>4.由于dp[i]是由前面两个数据推导而来，所以应该从前往后遍历。</p><h4 id="1-2-3-最终代码">1.2.3 最终代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">minCostClimbingStairs</span><span class="params">(<span class="type">int</span>* cost, <span class="type">int</span> costSize)</span> &#123;</span><br><span class="line">    <span class="comment">// dp[i]表示到达i位置所需要的最小体力</span></span><br><span class="line">    <span class="type">int</span>* dp = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * (costSize + <span class="number">1</span>));</span><br><span class="line">    <span class="comment">//初始位置可以使0或者1，所以dp[0]和dp[1]都为0</span></span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    dp[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= costSize; i++) &#123;</span><br><span class="line">        <span class="comment">// 从前前一个台阶往上跳花费为dp[i - 2] + cost[i - 2]，从前一个台阶往上跳花费为dp[i - 1] + cost[i - 1]，选择其中最小花费</span></span><br><span class="line">        dp[i] = fmin(dp[i - <span class="number">1</span>] + cost[i - <span class="number">1</span>],dp[i - <span class="number">2</span>] + cost[i - <span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[costSize];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、背包问题">二、背包问题</h2><h3 id="2-1-0-1背包问题">2.1 0-1背包问题</h3><h4 id="2-1-1-问题描述">2.1.1 问题描述</h4><p>0-1背包问题：有n件物品和一个最多能背重量为 w 的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。每件物品只能用一次，求解将哪些物品装入背包里物品价值总和最大。<br>例：<br>背包最大重量为4，有三种物品，其重量与价值分别为：</p><table><thead><tr><th style="text-align:center">物品</th><th style="text-align:center">重量</th><th style="text-align:center">价值</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">3</td><td style="text-align:center">20</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">4</td><td style="text-align:center">30</td></tr><tr><td style="text-align:center">问背包能背的物品最大价值是多少？</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h4 id="2-1-2-解决思想">2.1.2 解决思想</h4><p>0-1背包中，对于每种物品只能选择一次，所以对于每种物品只有两种情况：1.选择物品i，消耗掉背包容量weight[i]，总价值增加value[i]<br>2.不选择物品i，背包容量与总价值不变<br>所以根据以上思想，我们可以：<br>1.首先创建二维dp数组dp[i][j]，dp[i][j]表示在编号0到i的物品中背包容量为j时所能得到的最大价值。<br>2.dp[i][j]可由两种情况得到：a.选择物品i，最终结果为dp[i-1][j-weight[i]]+value[i]，b.不选择物品i，背包容量和最终价值不变，最终结果为dp[i-1][j]，所以最终dp[i][j]=fmax(dp[i-1][j-weight[i]]+value[i],dp[i-1][j])<br>3.初始化：当j&lt;weight[0]的时候，dp[0][j] 应该是 0，因为背包容量比编号0的物品重量还小。当j&gt;=weight[0]时，dp[0][j] 应该是value[0]，因为背包容量放足够放编号0物品。</p><p>初始化后：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">背</th><th style="text-align:center">包</th><th style="text-align:center">容</th><th style="text-align:center">量</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">物品0</td><td style="text-align:center">0</td><td style="text-align:center">15</td><td style="text-align:center">15</td><td style="text-align:center">15</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">物品1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">物品2</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr></tbody></table><p>4.由递推公式可以看出，dp[i][j]是由表格上边和左边数据得出的，所以应该从前往后遍历，至于i和j的先后顺序，因为不管是先i后j还是先j后i，都可以在得到dp[i][j]前得出其左上部分数据，所以遍历i,j的先后顺序无所谓</p><h4 id="2-1-3-最终代码">2.1.3 最终代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">bag0_1</span><span class="params">(<span class="type">int</span> *weight, <span class="type">int</span> weightSize, <span class="type">int</span> *cost, <span class="type">int</span> costSize, <span class="type">int</span> bagWeight)</span> &#123;</span><br><span class="line">    <span class="comment">// 定义dp数组，dp[i][j]含义为[0,i]号物品放入容量为j的背包里的最大价值</span></span><br><span class="line">    <span class="comment">// 横坐标表示物品编号，纵坐标表示背包当前容量</span></span><br><span class="line">    <span class="comment">/*dp数组</span></span><br><span class="line"><span class="comment">               背包容量</span></span><br><span class="line"><span class="comment">             0  1  2  3  4</span></span><br><span class="line"><span class="comment">     物品0</span></span><br><span class="line"><span class="comment">     物品1</span></span><br><span class="line"><span class="comment">     物品2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> dp[weightSize][bagWeight + <span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="comment">// 先全部初始化为0</span></span><br><span class="line">    <span class="comment">/*dp数组</span></span><br><span class="line"><span class="comment">               背包容量</span></span><br><span class="line"><span class="comment">            0  1  2  3  4</span></span><br><span class="line"><span class="comment">    物品0    0  0  0  0  0</span></span><br><span class="line"><span class="comment">    物品1    0  0  0  0  0</span></span><br><span class="line"><span class="comment">    物品2    0  0  0  0  0</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; weightSize; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= bagWeight; j++) &#123;</span><br><span class="line">            dp[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化dp数组第一行</span></span><br><span class="line">    <span class="comment">/*dp数组</span></span><br><span class="line"><span class="comment">                背包容量</span></span><br><span class="line"><span class="comment">            0   1   2   3   4</span></span><br><span class="line"><span class="comment">    物品0    0  15  15  15  15</span></span><br><span class="line"><span class="comment">    物品1    0  0   0   0   0</span></span><br><span class="line"><span class="comment">    物品2    0  0   0   0   0</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">for</span> (j = weight[<span class="number">0</span>]; j &lt;= bagWeight; j++) &#123;</span><br><span class="line">        dp[<span class="number">0</span>][j] = cost[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;----------init----------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; weightSize; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= bagWeight; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d &quot;</span>,dp[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;----------final----------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; weightSize; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= bagWeight; j++) &#123;</span><br><span class="line">            <span class="comment">// 不进行判断的话会造成dp[i - 1][j - weight[i]] + cost[i]中dp数组越界，j-weight[i]&lt;0</span></span><br><span class="line">            <span class="comment">// 如果当前背包容量小于物品重量</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; weight[i])&#123;</span><br><span class="line">                <span class="comment">// 背包物品的价值等于背包不放置当前物品时的价值</span></span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 若背包当前重量可以放置物品</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 背包的价值等于放置该物品或不放置该物品的最大值</span></span><br><span class="line">                dp[i][j] = fmax(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + cost[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*最终dp数组</span></span><br><span class="line"><span class="comment">                背包容量</span></span><br><span class="line"><span class="comment">            0   1   2   3   4</span></span><br><span class="line"><span class="comment">    物品0    0  15  15  15  15</span></span><br><span class="line"><span class="comment">    物品1    0  15  15  20  35</span></span><br><span class="line"><span class="comment">    物品2    0  15  15  20  35</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, dp[weightSize - <span class="number">1</span>][bagWeight]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法学习-递归算法的时间复杂度分析</title>
      <link href="/2024/01/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/"/>
      <url>/2024/01/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1>递归算法的时间复杂度分析</h1><h2 id="一、步骤">一、步骤</h2><ol><li>建立递归方程</li><li>求解该递归方程</li><li>用渐进符号表示函数的阶</li></ol><h2 id="二、递归方程">二、递归方程</h2><p>递归方程是一个等式或不等式，它通过更小的输入上的函数值来描述一个函数。<br>当一个算法包含对其自身的递归调用时，可以用递归方程来表示其运行时间。</p><p><strong>【例1】建立汉诺塔问题的算法递归方程</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Hanoi</span><span class="params">(<span class="type">int</span> n,<span class="type">char</span> A,<span class="type">char</span> B,<span class="type">char</span> C)</span><span class="comment">//------T(n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;将盘片%d从%c搬到%c\n&quot;</span>,n,A,C);<span class="comment">//------O(1)</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        Hanoi(n<span class="number">-1</span>,A,C,B);<span class="comment">//------T(n-1)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;将盘片%d从%c搬到%c\n&quot;</span>,n,A,C);<span class="comment">//------O(1)</span></span><br><span class="line">        Hanoi(n<span class="number">-1</span>,B,A,C);<span class="comment">//------T(n-1)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终得到递归方程为</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>                           当</mtext><mi>n</mi><mo>=</mo><mn>1</mn><mtext>时</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>     当</mtext><mi>n</mi><mo>&gt;</mo><mn>1</mn><mtext>时</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} T(n) = O(1)~~~~~~~~~~~~~~~~~~~~~~~~~~~当n=1时\\ T(n) = 2T(n-1) + O(1)~~~~~当n&gt;1时 \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord cjk_fallback">当</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mord cjk_fallback">时</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord cjk_fallback">当</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mord cjk_fallback">时</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h2 id="三、递归方程的求解">三、递归方程的求解</h2><h3 id="1-迭代法">1.迭代法</h3><p>从初始递归方程开始，反复用递归方程右边的等式代入左边的函数，直到得到初值。<br><strong>【例2】用迭代法求解递归方程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">T(n)=O(1)         当n=1时</span><br><span class="line">T(n)=2T(n-1)+O(1) 当n&gt;1时</span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo>=</mo><mn>2</mn><mo stretchy="false">[</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo stretchy="false">]</mo><mo>+</mo><mi>c</mi><mo>=</mo><msup><mn>2</mn><mn>2</mn></msup><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mi>c</mi><mo>=</mo><msup><mn>2</mn><mn>3</mn></msup><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mi>c</mi><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mi>c</mi><mo>=</mo><mo>…</mo><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mi>T</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msup><mo>+</mo><mo>…</mo><mo>+</mo><mi>c</mi><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mi>c</mi><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mi>c</mi><mo>=</mo><mi>c</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> T(n) = 2T(n-1)+c           = 2[2T(n-2)+c]+c      = 2^2T(n-2)+c2^1+c      = 2^3T(n-3)+c2^2+c2^1+c      = …      = 2^{n-1}T(1)+c2^{n-2}+…+c2^2+c2^1+c      = c(2^{n-1})      = O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">[</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><h3 id="2-代入法">2.代入法</h3><p>2.1 猜测解的形式<br>2.2 用数学归纳法证明</p><h3 id="3-递归树法">3.递归树法</h3><p>用树的形式给出一个递归算法执行的成本模型。</p><h4 id="3-1-递归树法求解递归方程的步骤">3.1 递归树法求解递归方程的步骤</h4><p>(1) 展开递归方程，构造对应的递归树<br>(2) 将树中每层中的代价求和，得到每层代价，再将所有层的代价求和，得到总的递归调用代价</p><h4 id="3-2-递归树的构造方法">3.2 递归树的构造方法</h4><p>(1) 递归树是一棵结点带权值的树，每个结点表示一个单一子问题的代价，子问题对应某次递归函数调用。<br>(2) 初始的递归树只有一个结点，它的权标记为T(n)；然后按照递归树的迭代规则不断进行迭代，每迭代一次递归树就增加一层，直到树中不再含有权值为函数的结点。</p><p><strong>【例3】求解递归方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">T(n)=T(n/4)+ T(n/2)+ n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></strong><br>解法如下：<br><img src="/image/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/2.png" alt=""></p><p><img src="/image/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/3.png" alt=""></p><h3 id="4-主定理法">4.主定理法</h3><p>主定理法适用于求解下面的递归形式:<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) =aT(n/b) + f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中其中a≥1,b&gt;1为常数，f(n)为渐近正函数，a为分解后的子问题个数，n/b为分解后子问题的规模，f(n)为分解与合并子问题的解的工作量。算法的时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>满足下列条件:</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi><mo stretchy="false">)</mo><mo>−</mo><mi>ε</mi></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ε</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mtext>比</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>大</mtext><mo stretchy="false">(</mo><mtext>大</mtext><msup><mi>n</mi><mi>ε</mi></msup><mtext>倍</mtext><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>则</mtext><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">f(n)=O(n^{(log_ba)-ε} ),ε&gt;0,n^{log_ba}比f(n)大(大n^ε倍),则T(n)=Θ(n^{log_ba});</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">ε</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">比</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">大</span><span class="mopen">(</span><span class="mord cjk_fallback">大</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">倍</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>那么</mtext><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">f(n)=Θ(n^{log_ba}),那么T(n)=Θ(n^{log_ba}log_2n);</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">那么</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi><mo stretchy="false">)</mo><mo>+</mo><mi>ε</mi></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ε</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>比</mtext><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mtext>大</mtext><mo stretchy="false">(</mo><mtext>大</mtext><msup><mi>n</mi><mi>ε</mi></msup><mtext>倍</mtext><mo stretchy="false">)</mo><mtext>且对于某个常数</mtext><mi>c</mi><mo>&lt;</mo><mn>1</mn><mtext>和所有的充分大的</mtext><mi>n</mi><mtext>有</mtext><mi>a</mi><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>c</mi><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>那么</mtext><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f(n)=Ω(n^{(log_ba)+ε}),ε&gt;0,f(n)比n^{log_ba}大(大n^ε倍)且对于某个常数c&lt;1和所有的充分大的n有af(n/b)≤cf(n),那么T(n)=Θ(f(n)).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">ε</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">比</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">大</span><span class="mopen">(</span><span class="mord cjk_fallback">大</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">倍</span><span class="mclose">)</span><span class="mord cjk_fallback">且对于某个常数</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">和所有的充分大的</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">有</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">那么</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mord">.</span></span></span></span></li></ol><p><strong>【例4】求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>9</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>3</mn><mo stretchy="false">)</mo><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">T(n)=9T(n/3)+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>的时间复杂度</strong><br><img src="/image/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/4.png" alt=""></p><p><strong>【例5】求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mi mathvariant="normal">/</mi><mn>3</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T(n)=T(2n/3)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mord">/3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的时间复杂度</strong><br><img src="/image/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/5.png" alt=""></p><p><strong>【例6】求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">T(n)=3T(n/4)+nlogn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>的时间复杂度</strong><br><img src="/image/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/6.png" alt=""></p><p>不能使用主定理法解决的情况：<br><strong>【例7】求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">T(n)=2T(n/2)+n^2log_2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span></span></span></span>的时间复杂度</strong><br>解：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mn>2</mn><mtext>，则</mtext><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mo>=</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>2</mn></mrow></msup><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">a=2,b=2，则n^{log_ba}=n^{log_22}=O(n),f(n)=nlogn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord">2</span><span class="mord cjk_fallback">，则</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>，<br>则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mo>∗</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>&lt;</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">af(n/b)=2*n/2*log(n/2)&lt;nlogn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">c=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>,不满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">c&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>,所以无法使用主定理法</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown数学公式语法</title>
      <link href="/2023/12/29/markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/12/29/markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>Markdown数学公式语法</h1><p>将数学公式写在两个$之间。写在两个之间是把公式居中。<br>更多符号表示见：<a href="https://katex.org/docs/supported">https://katex.org/docs/supported</a></p><h2 id="一、上下标">一、上下标</h2><p>^ 表示上标， _ 表示下标，如果上标或下标内容多于一个字符，则使用 {} 括起来。</p><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(x^2 + x^y)^&#123;x^y&#125;+ x_1^2= y_1 - y_2^&#123;x_1-y_1^2&#125;$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>x</mi><mi>y</mi></msup><msup><mo stretchy="false">)</mo><msup><mi>x</mi><mi>y</mi></msup></msup><mo>+</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>=</mo><msub><mi>y</mi><mn>1</mn></msub><mo>−</mo><msubsup><mi>y</mi><mn>2</mn><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup></mrow></msubsup></mrow><annotation encoding="application/x-tex">(x^2 + x^y )^{x^y}+ x_1^2= y_1 - y_2^{x_1-y_1^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.13em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.88em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4352em;vertical-align:-0.2663em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1689em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="二、分数">二、分数</h2><p>公式 \frac{分子}{分母}，或 分子 \over 分母</p><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\frac&#123;1-x&#125;&#123;y+1&#125;$ 或 $x \over x+y$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mn>1</mn><mo>−</mo><mi>x</mi></mrow><mrow><mi>y</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1-x}{y+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3262em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>x</mi><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x \over x+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1765em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h2 id="三、开方">三、开方</h2><p>公式\sqrt[n]{a}</p><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\sqrt[3]&#123;4&#125;$ 或 $\sqrt&#123;9&#125;$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mroot><mn>4</mn><mn>3</mn></mroot></mrow><annotation encoding="application/x-tex">\sqrt[3]{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.1328em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7869em;"><span style="top:-2.9647em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">4</span></span></span><span style="top:-2.8672em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em;"><span></span></span></span></span></span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mn>9</mn></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{9}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.1328em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">9</span></span></span><span style="top:-2.8672em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em;"><span></span></span></span></span></span></span></span></span></p><h2 id="四、括号">四、括号</h2><h3 id="4-1-直接写就行，而-则需要转义。">4.1 () [] 直接写就行，而 {} 则需要转义。</h3><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$f(x, y) = x^2 + y^2, x \epsilon [0, 100], y \epsilon \&#123;1,2,3\&#125;$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo separator="true">,</mo><mi>x</mi><mi>ϵ</mi><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>100</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>y</mi><mi>ϵ</mi><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">f(x, y) = x^2 + y^2, x \epsilon [0, 100], y \epsilon \{1,2,3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">ϵ</span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">100</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">yϵ</span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">}</span></span></span></span></p><h3 id="4-2-大括号，需要括号前加-left和-right。">4.2 大括号，需要括号前加\left和\right。</h3><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(\sqrt&#123;1 \over 2&#125;)^2$ 加大括号后 $\left(\sqrt&#123;1 \over 2&#125;\right)^2$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msqrt><mfrac><mn>1</mn><mn>2</mn></mfrac></msqrt><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(\sqrt{1 \over 2})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6049em;"></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2351em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.1951em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.88em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6049em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 加大括号后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mo fence="true">(</mo><msqrt><mfrac><mn>1</mn><mn>2</mn></mfrac></msqrt><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\left(\sqrt{1 \over 2}\right)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0891em;vertical-align:-0.65em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2351em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.1951em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.88em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6049em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.4391em;"><span style="top:-3.688em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="4-3-left-和-right必须成对出现，对于不显示的一边可以使用-代替。">4.3 \left 和 \right必须成对出现，对于不显示的一边可以使用 . 代替。</h3><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\frac&#123;du&#125;&#123;dx&#125; | _&#123;x=0&#125;$ 加大后 $\left. \frac&#123;du&#125;&#123;dx&#125; \right| _&#123;x=0&#125;$</span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>d</mi><mi>u</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\frac{du}{dx} | _{x=0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 加大后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mfrac><mrow><mi>d</mi><mi>u</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo fence="true">∣</mo></mrow><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\left. \frac{du}{dx} \right| _{x=0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2798em;vertical-align:-0.3997em;"></span><span class="minner"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='1.200em' viewBox='0 0 333 1200'><path d='M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0514em;"><span style="top:-2.3003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3997em;"><span></span></span></span></span></span></span></span></span></span></p><h3 id="4-4-大括号">4.4 大括号</h3><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$y :\begin&#123;cases&#125; x+y=1\\ x-y = 0 \end&#123;cases&#125;$</span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>:</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>−</mo><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">y :\begin{cases} x+y=1\\ x-y = 0 \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h2 id="五、向量">五、向量</h2><p>公式\vec{a}</p><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\vec a \cdot \vec b = 1$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\vec a \cdot \vec b = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9774em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><h2 id="六、定积分">六、定积分</h2><p>公式\int</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">符号：$\int$，示例公式：$\int_0^1x^2dx$</span><br></pre></td></tr></table></figure><p>符号： ∫，示例公式： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msup><mi>x</mi><mn>2</mn></msup><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int_0^1x^2dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3648em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.009em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></p><h2 id="七、极限">七、极限</h2><p>公式\lim_{n\rightarrow+\infty}</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">符号：$\lim_&#123;n\rightarrow+\infty&#125;$</span><br><span class="line">示例公式：$\lim_&#123;n\rightarrow+\infty&#125;\frac&#123;1&#125;&#123;n&#125;$ </span><br></pre></td></tr></table></figure><p>符号：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lim_{n\rightarrow+\infty}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span><br>示例公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msub><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\lim_{n\rightarrow+\infty}\frac{1}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h2 id="八、累加-累乘">八、累加/累乘</h2><p>公式累加\sum_1^n, 累乘\prod_{i=0}^n</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">累加  $\sum_1^n$</span><br><span class="line">累乘  $\prod_&#123;i=0&#125;^n$</span><br></pre></td></tr></table></figure><p>累加  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mn>1</mn><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">\sum_1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span></span></span></span><br>累乘  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">\prod_{i=0}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="九、省略号">九、省略号</h2><p>公式\ldots 表示底线对其的省略号，\cdots 表示中线对其的省略号，\cdot点乘号。</p><p>例 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$f(x_1,x_2,\ldots,x_n) = \left(&#123;1 \over x_1&#125;\right)^2+\left(&#123;1 \over x_2&#125;\right)^2+\cdots+\left(&#123;1 \over x_n&#125;\right)^2$ </span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mrow><mo fence="true">(</mo><mfrac><mn>1</mn><msub><mi>x</mi><mn>1</mn></msub></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><mfrac><mn>1</mn><msub><mi>x</mi><mn>2</mn></msub></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mrow><mo fence="true">(</mo><mfrac><mn>1</mn><msub><mi>x</mi><mi>n</mi></msub></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">f(x_1,x_2,\ldots,x_n) = \left({1 \over x_1}\right)^2+\left({1 \over x_2}\right)^2+\cdots+\left({1 \over x_n}\right)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.004em;vertical-align:-0.65em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.354em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.004em;vertical-align:-0.65em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.354em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.004em;vertical-align:-0.65em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.354em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><h2 id="十、符号">十、符号</h2><h3 id="10-1-数学符号">10.1 数学符号</h3><table><thead><tr><th>符号</th><th>代码</th><th>描述</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≠</mo></mrow><annotation encoding="application/x-tex">\not=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span></td><td>\not=</td><td>不等于</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span></td><td>\approx</td><td>约等于</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span></td><td>\leq</td><td>小于等于</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span></td><td>\geq</td><td>大于等于</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span></td><td>\times</td><td>乘号</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo></mrow><annotation encoding="application/x-tex">\pm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">±</span></span></span></span></td><td>\pm</td><td>正负号</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">÷</span></span></span></span></td><td>\div</td><td>除号</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span></span></span></span></td><td>\sum</td><td>累加</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∏</mo></mrow><annotation encoding="application/x-tex">\prod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span></span></span></span></td><td>\prod</td><td>累乘</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∐</mo></mrow><annotation encoding="application/x-tex">\coprod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∐</span></span></span></span></td><td>\coprod</td><td>累除</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{a+b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9778em;vertical-align:-0.0833em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-3.8144em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0833em;"><span></span></span></span></span></span></span></span></span></td><td>\overline{a+b}</td><td>平均值</td></tr></tbody></table><h3 id="10-2-三角函数">10.2 三角函数</h3><table><thead><tr><th>符号</th><th>代码</th><th>描述</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⊥</mi></mrow><annotation encoding="application/x-tex">\bot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">⊥</span></span></span></span></td><td>\bot</td><td>垂直</td></tr><tr><td>\angle$</td><td>\angle</td><td>角</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">30^\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6741em;"></span><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6741em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∘</span></span></span></span></span></span></span></span></span></span></span></td><td>30^\circ</td><td>30度</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">sin</span></span></span></span></td><td>\sin</td><td>正弦</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\cos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">cos</span></span></span></span></td><td>\cos</td><td>余弦</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>tan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\tan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">tan</span></span></span></span></td><td>\tan</td><td>正切</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cot</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\cot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">cot</span></span></span></span></td><td>\cot</td><td>余切</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sec</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">sec</span></span></span></span></td><td>\sec</td><td>正割</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>csc</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\csc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">csc</span></span></span></span></td><td>\csc</td><td>余割</td></tr></tbody></table><h3 id="10-3-定积分">10.3 定积分</h3><table><thead><tr><th>符号</th><th>代码</th><th>描述</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td>\infty</td><td>无穷</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span></span></span></span></td><td>\int</td><td>定积分</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∬</mo></mrow><annotation encoding="application/x-tex">\iint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111em;vertical-align:-0.306em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005em;">∬</span></span></span></span></td><td>\iint</td><td>双重积分</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∭</mo></mrow><annotation encoding="application/x-tex">\iiint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111em;vertical-align:-0.306em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005em;">∭</span></span></span></span></td><td>\iiint</td><td>三重积分</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∮</mo></mrow><annotation encoding="application/x-tex">\oint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∮</span></span></span></span></td><td>\oint</td><td>曲线积分</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo mathvariant="normal">′</mo></mrow><annotation encoding="application/x-tex">y\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">′</span></span></span></span></td><td>y\prime</td><td>求导</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lim</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\lim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">lim</span></span></span></span></td><td>\lim</td><td>极限</td></tr></tbody></table><h3 id="10-4-对数符号">10.4 对数符号</h3><table><thead><tr><th>符号</th><th>代码</th><th>符号</th><th>代码</th><th>符号</th><th>代码</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\log</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td>\log</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\ln</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span></span></span></span></td><td>\ln</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\lg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td>\lg</td></tr></tbody></table><h3 id="10-5-希腊字母">10.5 希腊字母</h3><table><thead><tr><th>符号</th><th>代码</th><th>符号</th><th>代码</th></tr></thead><tbody><tr><td>α</td><td>\alpha</td><td>β</td><td>\beta</td></tr><tr><td>γ</td><td>\gamma</td><td>δ</td><td>\delta</td></tr><tr><td>ϵ</td><td>\epsilon</td><td>ζ</td><td>\zeta</td></tr><tr><td>η</td><td>\eta</td><td>θ</td><td></td></tr><tr><td>ι</td><td>\iota</td><td>κ</td><td>\kappa</td></tr><tr><td>λ</td><td>\lambda</td><td>μ</td><td>\mu</td></tr><tr><td>ν</td><td>\nu</td><td>ξ</td><td>\xi</td></tr><tr><td>π</td><td>\pi</td><td>ρ</td><td>\rho</td></tr><tr><td>σ</td><td>\sigma</td><td>τ</td><td>\tau</td></tr><tr><td>υ</td><td>\upsilon</td><td>ϕ</td><td>\phi</td></tr><tr><td>χ</td><td>\chi</td><td>ψ</td><td>\psi</td></tr><tr><td>ω</td><td>\omega</td><td></td><td></td></tr></tbody></table><h2 id="十一、逻辑符号">十一、逻辑符号</h2><table><thead><tr><th>符号</th><th>代码</th><th>符号</th><th>代码</th><th>符号</th><th>代码</th><th>符号</th><th>代码</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">∀</span></span></span></span>$</td><td>\forall</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∁</mi></mrow><annotation encoding="application/x-tex">\complement</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.825em;"></span><span class="mord amsrm">∁</span></span></span></span></td><td>\complement</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∴</mo></mrow><annotation encoding="application/x-tex">\therefore</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6922em;"></span><span class="mrel amsrm">∴</span></span></span></span></td><td>\therefore</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td><td>\emptyset</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↑</span></span></span></span></td><td>\uparrow</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span></td><td>\subset</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∵</mo></mrow><annotation encoding="application/x-tex">\because</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6922em;"></span><span class="mrel amsrm">∵</span></span></span></span></td><td>\because</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">¬</span></span></span></span></td><td>\neg</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">∃</span></span></span></span></td><td>\exists</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊃</mo></mrow><annotation encoding="application/x-tex">\supset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊃</span></span></span></span></td><td>\supset</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↦</mo></mrow><annotation encoding="application/x-tex">\mapsto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">↦</span></span></span></span></td><td>\mapsto</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6633em;vertical-align:-0.0817em;"></span><span class="mord amsrm">∅</span></span></span></span></td><td>\varnothing</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∄</mi></mrow><annotation encoding="application/x-tex">\nexists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord amsrm">∄</span></span></span></span></td><td>\nexists</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∣</mo></mrow><annotation encoding="application/x-tex">\mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">∣</span></span></span></span></td><td>\mid</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span></td><td>\to</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext></mrow><annotation encoding="application/x-tex">\implies</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span></span></span></td><td>\implies</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span></td><td>\in</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∧</span></span></span></span></td><td>\land</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\gets</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span></td><td>\gets</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>  </mtext><mo>⟸</mo><mtext>  </mtext></mrow><annotation encoding="application/x-tex">\impliedby</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟸</span><span class="mspace" style="margin-right:0.2778em;"></span></span></span></span></td><td>\impliedby</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↓</span></span></span></span></td><td>\downarrow</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∨</span></span></span></span></td><td>\lor</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↔</span></span></span></span></td><td>\leftrightarrow</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext></mrow><annotation encoding="application/x-tex">\iff</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟺</span><span class="mspace" style="margin-right:0.2778em;"></span></span></span></span></td><td>\iff</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">∉</mo></mrow><annotation encoding="application/x-tex">\notin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span></span></span></span></td><td>\notin</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∋</mo></mrow><annotation encoding="application/x-tex">\ni</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∋</span></span></span></span></td><td>\ni</td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="/2023/12/28/markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/12/28/markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>一、一级标题</h1><p>一个#表示一级标题</p><h2 id="1-二级标题">1 二级标题</h2><p>两个##表示二级标题</p><h3 id="1-1-三级标题">1.1 三级标题</h3><p>三个###表示三级标题</p><h3 id="1-2-两个空格-换行符：换行">1.2 两个空格+换行符：换行</h3><p>换行</p><h3 id="1-3-间空一行：换段">1.3 间空一行：换段</h3><h3 id="1-4-调">1.4 调</h3><p>1.加粗 <strong>在字的两端加上两个星号</strong>，或者<strong>ctrl+b</strong><br>2.斜体  <em>在字的两端加一个星号</em></p><h3 id="1-5-有序列表">1.5 有序列表</h3><p>1.5.1 1.+空格<br>1.5.2. 回车自动编号<br>1.5.2.1. 二级标题</p><h3 id="1-6-插入图片">1.6 插入图片</h3><p><img src="/image/markdown%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/1.PNG" alt=""><br><em>小樱</em>（）给图片加入文字说明</p><p>插入图片语法<br>!+[ ]+( )</p><h3 id="1-7-表格">1.7 表格</h3><p>使用竖线划分<br>第一行为表头<br>第二行为对齐方式（冒号在左边表示左对齐，冒号在右边表示右对齐，冒号在中间表示居中）<br>第三行表示内容</p><table><thead><tr><th>小明</th><th>小红</th><th>小强</th></tr></thead><tbody><tr><td>1.2</td><td>1.5</td><td>1.7</td></tr></tbody></table><p>alt+shift+f格式化表格形式</p><h3 id="1-8-添加链接">1.8 添加链接</h3><p>这是一个<a href="https://www.bilibili.com/video/BV1si4y1472o/?spm_id_from=333.337.search-card.all.click&amp;vd_source=2fdc486181b2991ef85aa5040ec81a32">链接</a><br>直接复制粘贴，markdown自动识别URL</p><h3 id="1-9-添加代码块">1.9 添加代码块</h3><p>用三个波浪线~~~括起来，指定语言后有高亮</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-10-关于基础语法的文章">1.10 关于基础语法的文章</h3><p><a href="https://www.limfx.pro/ReadArticle/57/yi-zhong-xie-zuo-de-xin-fang-fa">链接</a></p><h3 id="1-11-禅模式">1.11 禅模式</h3><p>ctrl+k–&gt;z</p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
